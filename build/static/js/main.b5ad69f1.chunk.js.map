{"version":3,"sources":["asset/images/metamask.svg","config/constants/chains.ts","asset/images/walletconnect.svg","asset/images/coinbasewallet.svg","config/index.ts","hooks/useAuth.ts","config/localization/languages.ts","context/Localization/helpers.ts","context/Localization/Provider.tsx","context/Localization/useTranslation.ts","components/header/ConnectWallet.tsx","utils/formatAddress.ts","components/header/LanguageSelector.tsx","components/header/index.tsx","components/sidebar/Menu.tsx","components/sidebar/index.tsx","asset/images/twitter.svg","asset/images/telegram.svg","asset/images/discord.svg","asset/images/medium.svg","asset/images/facebook.svg","asset/images/instagram.svg","asset/images/seven_chain_logo.png","components/footer/index.tsx","components/viewbase/index.tsx","components/styled_components/SwitchLarge.tsx","components/Settings.tsx","state/swap/actions.ts","utils/index.ts","utils/fraction.ts","utils/token.ts","utils/wagmi.tsx","hooks/useSessionChainId.ts","hooks/useActiveChainId.ts","utils/wrappedTokenInfo.ts","config/constants/lists.ts","state/lists/actions.ts","state/lists/reducer.ts","state/lists/lists.ts","state/lists/hooks.ts","state/user/hooks/useUserAddedTokens.ts","hooks/useNativeCurrency.ts","config/constants/index.ts","config/constants/types.ts","config/abi/erc20.ts","utils/multiCall.ts","hooks/Tokens.ts","state/user/actions.ts","state/transactions/actions.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/global/actions.ts","state/types.ts","state/user/reducer.ts","state/global/reducer.ts","state/multicall/actions.ts","state/index.ts","state/multicall/reducer.ts","state/swap/useSwapActionHandlers.ts","components/TokenSelectModal.tsx","hooks/useDebounce.ts","utils/filtering.ts","hooks/useActiveWeb3React.ts","hooks/useWeb3React.ts","hooks/useProviderOrSigner.ts","config/constants/contracts.ts","utils/addressHelper.ts","hooks/useContract.ts","state/multicall/hooks.ts","state/wallet/hooks.ts","views/swap/components/CurrencyInputPanel.tsx","views/swap/components/CurrencyOutputPanel.tsx","views/swap/components/SubmitSwap.tsx","views/swap/components/SwitchIOCurrency.tsx","utils/replaceBrowserHistory.ts","utils/currencyId.ts","views/swap/components/SwapContainer.tsx","state/swap/hooks.ts","utils/registerToken.ts","views/swap/components/AddTokenToWallet.tsx","views/swap/index.tsx","context/RefreshContextProvider.tsx","hooks/useSWRContract.ts","App.tsx","index.tsx"],"names":["ChainId","ConnectorNames","CHAIN_QUERY_NAME","ETHEREUM","GOERLI","POLYGON","MUMBAI","SVC","CHAIN_QUERY_NAME_TO_ID","invert","getChainId","memoize","chainName","undefined","useAuth","useConnect","connectAsync","connectors","isLoading","chain","useNetwork","disconnectAsync","useDisconnect","login","useCallback","connectorId","findConnector","find","item","id","connector","chainId","connected","ConnectorNotFoundError","console","log","SwitchChainError","SwitchChainNotSupportedError","logout","loading","EN","locale","language","code","languages","Object","values","LS_KEY","fetchLocale","fetch","response","ok","json","data","error","statusText","getLanguageCodeFromLS","localStorage","getItem","initialState","isFetching","currentLanguage","includesVariableRegex","RegExp","translatedTextIncludesVariable","translatedText","match","languageMap","Map","set","translations","LanguageContext","createContext","LanguageProvider","children","useState","codeFromStorage","state","setState","useEffect","fetchInitialLocales","enLocale","get","currentLocale","prevState","setLanguage","has","setItem","translate","key","translationSet","interpolatedText","keys","forEach","dataKey","templateKey","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","modalStyle","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","wallets","logo","MetamaskIcon","name","MetaMask","WalletConnectIcon","WalletConnect","CoinbaseWalletIcon","WalletLink","ConnectButton","isXs","useMediaQuery","open","setOpen","connecting","setConnect","useAccount","isConnected","address","Box","sx","mx","display","alignContent","justifyContent","Button","textTransform","color","padding","fontSize","onClick","slice","formart","Modal","onClose","backdropFilter","xs","md","mb","cursor","Typography","map","wallet","index","border","my","src","alt","style","height","alignItems","lineHeight","px","mr","StyledMenu","styled","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","marginTop","spacing","minWidth","palette","mode","grey","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","LangMenu","LanguageSelector","React","anchorEl","setAnchorEl","Boolean","py","fill","event","currentTarget","pr","lang","MenuItem","selectLang","useStyles","makeStyles","topBar","whiteSpace","topBarShift","transition","transitions","create","easing","easeOut","duration","marginLeft","toggleButton","Header","handleDrawerToggle","is960","classes","className","flexWrap","flexGrow","to","pathname","target","Avatar","mt","menuList","fontFamily","fontWeight","title","MenuList","Link","component","NavLink","toLocaleLowerCase","textDecoration","drawer","breakpoints","up","flexShrink","drawerPaper","borderRight","scrollHeight","paddingLeft","paddingRight","down","Sidebar","drawerOpen","drawerToggle","Fragment","ml","container","window","document","body","Drawer","variant","anchor","paper","ModalProps","keepMounted","PaperProps","footerView","background","Footer","flexDirection","m","marginBottom","SevenChainIcon","TwitterIcon","TelegramIcon","DiscordIcon","MediumIcon","FacebookIcon","InstagramIcon","maxWidth","textIndent","mainView","content","sharp","contentShift","ViewBase","mobileOpen","setMobileOpen","isMd","clsx","SwitchLarge","Switch","focusVisibleClassName","disableRipple","margin","transitionDuration","opacity","boxSizing","Settings","closeModal","slippage","setSlippage","textAlign","size","overflow","filter","right","zIndex","Tooltip","disableInteractive","ToggleButtonGroup","exclusive","onChange","newSlip","ToggleButton","OutlinedInput","borderColor","type","endAdornment","InputAdornment","inputProps","Field","selectCurrency","createAction","switchCurrencies","typeInput","replaceSwapState","setRecipient","updatePairData","updateDerivedPairData","isAddress","getAddress","getContract","ABI","signer","AddressZero","Contract","Rounding","Decimal","toFormat","_Decimal","Big","_Big","RoundingMode","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","VersionUpgrade","toFixedRounding","RoundDown","RoundHalfUp","RoundUp","Fraction","numerator","denominator","JSBI","BigInt","this","divide","remainder","other","otherParsed","tryParseFraction","equal","add","multiply","subtract","lessThan","greaterThan","significantDigits","format","groupSeparator","rounding","invariant","Number","isInteger","precision","quotient","div","toSignificantDigits","decimalPlaces","DP","RM","fractionish","MaxUint256","BaseCurrency","decimals","symbol","logoURI","isNative","isToken","isSafeInteger","NativeCurrency","Native","wnative","WNATIVE","cache","NATIVE","Token","projectLink","toLowerCase","ERC20Token","checksummedAddress","warning","validateAndParseAddress","CurrencyAmount","currency","decimalScale","lessThanOrEqual","exponentiate","equals","added","fromFractionalAmount","subtracted","multiplied","divided","toSignificant","toFixed","wrapped","rawAmount","WETH","WMATIC","EMPTY_LIST","CHAINS","polygon","polygonMumbai","mainnet","goerli","configureChains","jsonRpcProvider","rpc","http","rpcUrls","default","provider","chains","coinbaseConnector","InjectedConnector","options","shimDisconnect","shimChainChangedDisconnect","CoinbaseWalletConnector","appName","walletConnectConnector","WalletConnectConnector","qrcode","metaMaskConnector","MetaMaskConnector","client","createClient","autoConnect","CHAIN_IDS","c","isChainSupported","includes","testnet","WagmiProvider","Web3LibraryContext","Web3LibraryProvider","library","useSWRImmutable","getProvider","Web3Provider","sessionChainIdAtom","atom","queryChainIdAtom","useLocalNetworkChain","useAtom","sessionChainId","queryChainId","useAtomValue","useSearchParams","param","onMount","params","URL","location","href","searchParams","useActiveChainId","localChainId","isNotMatched","useDeferredValue","isWrongNetwork","unsupported","WrappedTokenInfo","tokenInfo","deserializeToken","serializedToken","PANCAKE_EXTENDED","COINGECKO_ETH","ETH_URLS","OFFICIAL_LISTS","UNSUPPORTED_LIST_URLS","WARNING_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","updateListVersion","NEW_LIST_STATE","current","loadingRequestId","pendingUpdate","noop","noopStorage","removeItem","getAllKeys","EMPTY","Symbol","lastInitializedDefaultListOfLists","byUrl","concat","reduce","memo","listUrl","activeListUrls","storeName","reducer","listsStorageAtom","atomWithStorage","dbName","db","localForage","createInstance","k","v","delayInit","IndexedDBStorage","defaultStateAtom","got","isReadyAtom","listsAtom","useListStateReady","useListState","createListsAtom","createReducer","builder","addCase","payload","requestId","url","base","update","tokenList","version","major","MAJOR","NONE","minor","MINOR","patch","PATCH","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","sortByListPriority","urlA","urlB","first","indexOf","MAX_SAFE_INTEGER","second","selectorActiveUrlsAtom","selectorByUrlsAtom","combineTokenMapsWithDefault","urls","lists","listToTokenMap","DEFAULT_TOKEN_LIST","combineTokenMaps","sort","allTokens","currentUrl","combineMaps","assign","combinedTokenMapFromActiveUrlsAtom","inactiveUrlAtom","listCache","mergedTokenLists","acc","tokens","mergedList","length","mapValues","groupBy","uniqBy","tokenInfos","keyBy","UNSUPPORTED_TOKEN_LIST","WARNING_TOKEN_LIST","WeakMap","list","result","obj","tokenMap","groupedTokenMap","tokenAddressMap","tokenInfoList","token","isNaN","defineProperty","map1","map2","selectUserTokens","user","useUserAddedTokens","useSelector","useMemo","createSelector","serializedTokensMap","userAddedTokenSelector","useNativeCurrency","onChain","e","FetchStatus","ERC20_INTERFACE","Interface","ERC20_ABI","ERC20_BYTES32_ABI","multicallAddresses","getMulticallContract","multicallAbi","multicall","abi","calls","multi","itf","calldata","call","callData","encodeFunctionData","callStatic","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","_provider","requireSuccess","overrides","tryAggregate","multicallv3","allowFailure","interfaceCache","_calls","_allowFailure","fragments","some","fragment","aggregate3","success","createMulticall","mapWithoutUrls","newMap","useAllTokens","userAddedTokens","tokenMap_","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useCurrency","currencyId","native","toUpperCase","tokenAddress","method","erc20ABI","tokenName","status","Fetched","Failed","dataBytes","statusBytes","tokenNameBytes32","symbolBytes32","useToken","FarmStakedOnly","ViewMode","ChartViewMode","addTransaction","clearAllTransactions","finalizeTransaction","checkedTransaction","now","Date","getTime","transactions","from","hash","approval","summary","txs","addedTime","blockNumber","tx","lastCheckedBlockNumber","Math","max","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","pairDataById","derivedPairDataById","otherField","pairData","pairId","timeWindow","updateVersion","toggleFarmTransactionModal","pickFarmTransactionTx","GAS_PRICE","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserLimitOrderAcceptedWarning","updateUserPredictionChartDisclaimerShow","updateUserPredictionChainlinkChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","hidePhishingWarningBanner","setIsExchangeChartDisplayed","setChartViewMode","setZapDisabled","setSubgraphHealthIndicatorDisplayed","GAS_PRICE_GWEI","currentTimestamp","parseUnits","fast","instant","pairKey","token0Address","token1Address","userExpertMode","userSingleHopOnly","userSlippageTolerance","userDeadline","pairs","audioPlay","isExchangeChartDisplayed","isSubgraphHealthIndicatorDisplayed","userChartViewMode","BASIC","userFarmStakedOnly","ON_FINISHED","userPoolStakedOnly","userPoolsViewMode","TABLE","userFarmsViewMode","userPredictionAcceptedRisk","userLimitOrderAcceptedWarning","userPredictionChartDisclaimerShow","userPredictionChainlinkChartDisclaimerShow","userExpertModeAcknowledgementShow","userUsernameVisibility","userZapDisabled","gasPrice","watchlistTokens","watchlistPools","hideTimestampPhishingWarningBanner","lastUpdateVersionTimestamp","omitBy","serializedPair","token0","token1","tokenAAddress","tokenBAddress","tokenAToB","tokenBToA","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","x","poolsWatchlist","newPools","showFarmTransactionModal","pickedFarmTransactionModalTx","showModal","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","store","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","blocksPerFetch","listeners","callListeners","callKey","fetchingBlockNumber","results","persistConfig","whitelist","blacklist","storage","persistedReducer","persistReducer","combineReducers","swap","global","makeStore","preloadedState","configureStore","middleware","getDefaultMiddleware","thunk","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","initializeStore","_store","getState","useAppDispatch","useDispatch","useSwapActionHandlers","dispatch","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","CurrencyRow","onSelect","TokenSelectModal","onCurrencySelect","setValue","nativeCurrency","fixedList","useRef","searchQuery","setSearchQuery","debouncedQuery","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","handleInput","input","checksummedInput","scrollTo","filteredTokens","filterToken","search","searchingAddress","lowerSearchParts","split","matchesSearch","sParts","s_","every","sp","startsWith","endsWith","createFilterToken","handleCurrencySelect","alignItem","placeholder","startAdornment","Tabs","newValue","borderTopLeftRadius","borderTopRightRadius","Tab","label","borderBottomLeftRadius","borderBottomRightRadius","useActiveWeb3React","web3React","isConnecting","useProvider","account","useWeb3React","useProviderOrSigner","withSignerIfPossible","useSigner","getMulticallAddress","addresses","useContract","providerOrSigner","canReturnContract","isMethodArg","isValidMethodArgs","Array","isArray","xi","INVALID_RESULT","valid","useCallsData","serializedCallKeys","JSON","stringify","callKeys","parse","pcs","parseCallKey","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","latestBlockNumber","debug","useNativeBalances","uncheckedAddresses","multicallContract","multiCallAbi","useMulticallContract","orderBy","a","contract","methodName","callInputs","interface","getFunction","inputs","useSWRConfig","currentBlockNumber","unstable_serialize","useSingleContractMultipleData","fromRawAmount","useTokenBalancesWithLoadingIndicator","validatedTokens","balances","useMultipleContractSingleData","vt","anyLoading","callState","amount","useTokenBalances","useCurrencyBalance","currencies","tokenBalances","containsNative","nativeBalance","useCurrencyBalances","CurrencyInputPanel","selectedCurrencyBalance","TextField","autoComplete","InputProps","disableUnderline","min","inputMode","pattern","endIcon","CurrencyOutputPanel","SubmitSwap","SwitchIOCurrency","Divider","replaceBrowserHistory","String","delete","history","replaceState","cardView","SwapContainer","inputCurrency","outputCurrency","handleTypeInput","handleTypeOutput","handleInputSelect","newCurrencyInput","newCurrencyInputId","handleOutputSelect","newCurrencyOutput","newCurrencyOutputId","registerToken","tokenSymbol","tokenDecimals","tokenLogo","ethereum","request","image","tokenAdded","AddTokenToWallet","swapView","Swap","RefreshContext","slow","RefreshContextProvider","setSlow","setFast","setInstant","interval","setInterval","prev","clearInterval","fetchStatusMiddleware","useSWRNext","fetcher","config","swr","Idle","isValidating","Fetching","App","createTheme","typography","components","MuiButton","styleOverrides","root","use","autoClose","limit","pauseOnFocusLoss","ThemeProvider","path","element","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b5ad69f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask.09e5f554.svg\";","import { Chain } from 'wagmi'\r\nimport memoize from 'lodash/memoize'\r\nimport invert from 'lodash/invert'\r\n\r\nexport enum ChainId {\r\n    ETHEREUM = 1,\r\n    GOERLI = 5,\r\n    POLYGON = 137,\r\n    MUMBAI = 80001,\r\n    SVC = 36\r\n}\r\n\r\nexport const CHAIN_QUERY_NAME = {\r\n    [ChainId.ETHEREUM]: 'eth',\r\n    [ChainId.GOERLI]: 'goerli',\r\n    [ChainId.POLYGON]: 'polygon',\r\n    [ChainId.MUMBAI]: 'mumbai',\r\n    [ChainId.SVC]: 'svc'\r\n} as Record<ChainId, string>\r\n\r\nconst CHAIN_QUERY_NAME_TO_ID = invert(CHAIN_QUERY_NAME)\r\n\r\nexport const getChainId = memoize((chainName: string) => {\r\n    if (!chainName) return undefined\r\n    return CHAIN_QUERY_NAME_TO_ID[chainName] ? +CHAIN_QUERY_NAME_TO_ID[chainName] : undefined\r\n})\r\n\r\nexport const DEFAULT_CHAIN_ID = 80001\r\nexport const DEFAULT_PROVIDER = 'https://matic-mumbai.chainstacklabs.com'\r\n\r\nconst explorer = { name: 'PolygonScan', url: 'https://polygonscan.com/' }\r\n\r\nexport const polygon: Chain = {\r\n    id: 137,\r\n    name: 'BNB Smart Chain',\r\n    network: 'bsc',\r\n    rpcUrls: {\r\n        public: 'https://matic-mumbai.chainstacklabs.com',\r\n        default: 'https://matic-mumbai.chainstacklabs.com',\r\n    },\r\n    blockExplorers: {\r\n        default: explorer,\r\n        etherscan: explorer,\r\n    },\r\n    nativeCurrency: {\r\n        name: 'Polygon Chain Native Token',\r\n        symbol: 'MATIC',\r\n        decimals: 18,\r\n    }\r\n}\r\n\r\nexport const mumbai: Chain = {\r\n    id: 80001,\r\n    name: 'Polygon Chain Testnet',\r\n    network: 'mumbai',\r\n    nativeCurrency: {\r\n        decimals: 18,\r\n        name: 'Polygon Chain Native Token',\r\n        symbol: 'MATIC',\r\n    },\r\n    rpcUrls: {\r\n        public: 'https://matic-mumbai.chainstacklabs.com',\r\n        default: 'https://matic-mumbai.chainstacklabs.com',\r\n    },\r\n    blockExplorers: {\r\n        default: { name: 'PolygonScan', url: 'https://mumbai.polygonscan.com/' },\r\n    },\r\n    testnet: true,\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/walletconnect.a1aae2e6.svg\";","export default __webpack_public_path__ + \"static/media/coinbasewallet.ff1bcce1.svg\";","\r\n\r\nexport enum ConnectorNames {\r\n    MetaMask = 'metaMask',\r\n    Injected = 'injected',\r\n    WalletConnect = 'walletConnect',\r\n    WalletLink = 'coinbaseWallet'\r\n}\r\n\r\n\r\nexport const DATABASE_URL = 'http://localhost:5000/api/computed-apys'","import { useCallback } from 'react'\r\nimport { ConnectorNames } from 'src/config'\r\nimport { DEFAULT_CHAIN_ID } from 'src/config/constants/chains'\r\nimport {\r\n    ConnectorNotFoundError,\r\n    SwitchChainError,\r\n    SwitchChainNotSupportedError,\r\n    useConnect,\r\n    useDisconnect,\r\n    useNetwork,\r\n} from 'wagmi'\r\n\r\n\r\nconst useAuth = () => {\r\n\r\n    const { connectAsync, connectors, isLoading } = useConnect()\r\n    const { chain } = useNetwork()\r\n    const { disconnectAsync } = useDisconnect()\r\n    const chainId = DEFAULT_CHAIN_ID;\r\n\r\n    const login = useCallback(\r\n        async (connectorId: ConnectorNames) => {\r\n            const findConnector = connectors.find((item) => item.id === connectorId)\r\n            try {\r\n                const connected = await connectAsync({ connector: findConnector, chainId })\r\n                return connected\r\n            } catch (error) {\r\n                if (error instanceof ConnectorNotFoundError) {\r\n                    console.log('wallet connector not found')\r\n                }\r\n                if (error instanceof SwitchChainError || error instanceof SwitchChainNotSupportedError) {\r\n                    console.log('Unable to switch network, please try it on your wallet')\r\n                }\r\n            }\r\n            return undefined\r\n        },\r\n        [connectors, connectAsync, chainId]\r\n    )\r\n\r\n    const logout = useCallback(\r\n        async () => {\r\n            try {\r\n                await disconnectAsync()\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }, [disconnectAsync, chain?.id]\r\n    )\r\n    return { login, logout, loading: isLoading }\r\n}\r\n\r\nexport default useAuth","export interface Language {\r\n    locale: string;\r\n    language: string;\r\n    code: string;\r\n}\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n    'ar-SA': AR,\r\n    'bn-BD': BN,\r\n    'en-US': EN,\r\n    'de-DE': DE,\r\n    'el-GR': EL,\r\n    'es-ES': ESES,\r\n    'fi-FI': FI,\r\n    'fil-PH': FIL,\r\n    'fr-FR': FR,\r\n    'hi-IN': HI,\r\n    'hu-HU': HU,\r\n    'id-ID': ID,\r\n    'it-IT': IT,\r\n    'ja-JP': JA,\r\n    'ko-KR': KO,\r\n    'nl-NL': NL,\r\n    'pl-PL': PL,\r\n    'pt-BR': PTBR,\r\n    'pt-PT': PTPT,\r\n    'ro-RO': RO,\r\n    'ru-RU': RU,\r\n    'sv-SE': SVSE,\r\n    'ta-IN': TA,\r\n    'tr-TR': TR,\r\n    'uk-UA': UK,\r\n    'vi-VN': VI,\r\n    'zh-CN': ZHCN,\r\n    'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import { EN } from '../../config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL || ''\r\n\r\nexport const LS_KEY = 'svc_dex_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n    const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n    if (response.ok) {\r\n        const data = await response.json()\r\n        return data\r\n    }\r\n\r\n    console.error(`API: Failed to fetch locale ${locale}`, response.statusText)\r\n    return null\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n    try {\r\n        const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n        return codeFromStorage || EN.locale\r\n    } catch {\r\n        return EN.locale\r\n    }\r\n}\r\n","import { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from './types'\r\nimport memoize from 'lodash/memoize'\r\nimport { EN, languages } from 'src/config/localization/languages'\r\nimport translations from 'src/config/localization/translations.json'\r\nimport { ContextApi, ProviderState, TranslateFunction } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\n\r\n\r\nconst initialState: ProviderState = {\r\n    isFetching: true,\r\n    currentLanguage: EN,\r\n}\r\n\r\nconst includesVariableRegex = new RegExp(/%\\S+?%/, 'gm')\r\n\r\nconst translatedTextIncludesVariable = memoize((translatedText: string): boolean => {\r\n    return !!translatedText?.match(includesVariableRegex)\r\n})\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\n\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi | undefined>(undefined)\r\n\r\nexport const LanguageProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\r\n    const [state, setState] = useState<ProviderState>(() => {\r\n        const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n        return {\r\n            ...initialState,\r\n            currentLanguage: languages[codeFromStorage] || EN,\r\n        }\r\n    })\r\n    const { currentLanguage } = state\r\n\r\n    useEffect(() => {\r\n        const fetchInitialLocales = async () => {\r\n            const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n            if (codeFromStorage !== EN.locale) {\r\n                const enLocale = languageMap.get(EN.locale)\r\n                const currentLocale = await fetchLocale(codeFromStorage)\r\n                if (currentLocale) {\r\n                    languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n                }\r\n            }\r\n\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                isFetching: false,\r\n            }))\r\n        }\r\n\r\n        fetchInitialLocales()\r\n    }, [setState])\r\n\r\n    const setLanguage = useCallback(async (language: Language) => {\r\n        if (!languageMap.has(language.locale)) {\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                isFetching: true,\r\n            }))\r\n\r\n            const locale = await fetchLocale(language.locale)\r\n            if (locale) {\r\n                const enLocale = languageMap.get(EN.locale)\r\n                // Merge the EN locale to ensure that any locale fetched has all the keys\r\n                languageMap.set(language.locale, { ...enLocale, ...locale })\r\n            }\r\n\r\n            localStorage?.setItem(LS_KEY, language.locale)\r\n\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                isFetching: false,\r\n                currentLanguage: language,\r\n            }))\r\n        } else {\r\n            localStorage?.setItem(LS_KEY, language.locale)\r\n            setState((prevState) => ({\r\n                ...prevState,\r\n                isFetching: false,\r\n                currentLanguage: language,\r\n            }))\r\n        }\r\n    }, [])\r\n\r\n    const translate: TranslateFunction = useCallback(\r\n        (key, data) => {\r\n            const translationSet = languageMap.get(currentLanguage.locale) ?? languageMap.get(EN.locale)\r\n            const translatedText = translationSet?.[key] || key\r\n\r\n            // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n            const includesVariable = translatedTextIncludesVariable(translatedText)\r\n\r\n            if (includesVariable && data) {\r\n                let interpolatedText = translatedText\r\n                Object.keys(data).forEach((dataKey) => {\r\n                    const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n                    interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n                })\r\n\r\n                return interpolatedText\r\n            }\r\n\r\n            return translatedText\r\n        },\r\n        [currentLanguage],\r\n    )\r\n\r\n    return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import React, { useCallback, useState, useEffect } from 'react'\r\n// import { makeStyles } from '@mui/styles';\r\nimport { Button, Box, Typography, Modal, useMediaQuery } from '@mui/material'\r\nimport { IconX } from '@tabler/icons'\r\nimport { formart } from '../../utils/formatAddress';\r\nimport MetamaskIcon from '../../asset/images/metamask.svg'\r\nimport WalletConnectIcon from '../../asset/images/walletconnect.svg'\r\nimport CoinbaseWalletIcon from '../../asset/images/coinbasewallet.svg'\r\nimport { useAccount } from 'wagmi';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport { ConnectorNames } from 'src/config';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { useTranslation } from 'src/context/Localization';\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '400px',\r\n    bgcolor: '#FFF',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: '20px'\r\n}\r\n\r\nconst wallets = [\r\n    {\r\n        logo: MetamaskIcon,\r\n        name: 'Metamask',\r\n        id: ConnectorNames.MetaMask\r\n\r\n    }, {\r\n        logo: WalletConnectIcon,\r\n        name: 'Wallet Connect',\r\n        id: ConnectorNames.WalletConnect\r\n    }, {\r\n        logo: CoinbaseWalletIcon,\r\n        name: 'Coinbase Wallet',\r\n        id: ConnectorNames.WalletLink\r\n    }\r\n]\r\n\r\nfunction ConnectButton() {\r\n\r\n    const isXs = useMediaQuery('(max-width:400px)')\r\n    const [open, setOpen] = useState(false)\r\n    const onClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const [connecting, setConnect] = useState('Metamask')\r\n    const { isConnected, address } = useAccount()\r\n    const { login, loading } = useAuth()\r\n\r\n    const { t } = useTranslation()\r\n\r\n    useEffect(() => {\r\n        if (isConnected) {\r\n            setOpen(false);\r\n        }\r\n    }, [isConnected])\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                sx={{\r\n                    mx: 2,\r\n                    display: 'flex',\r\n                    alignContent: 'center',\r\n                    justifyContent: 'center'\r\n                }}\r\n            >\r\n                <Button\r\n                    sx={{\r\n                        bgcolor: '#e57a3b',\r\n                        borderRadius: '10000px',\r\n                        textTransform: 'none',\r\n                        color: '#FFF',\r\n                        padding: '5px 10px 10px',\r\n                        fontSize: '18px',\r\n                        '&:hover': {\r\n                            bgcolor: '#e57a3b'\r\n                        }\r\n                    }}\r\n                    onClick={() => {\r\n                        if (!isConnected)\r\n                            setOpen(!open)\r\n                    }}\r\n                >\r\n                    {(() => {\r\n                        if (isConnected)\r\n                            return formart(address as string)\r\n                        else\r\n                            return isXs ? t('Connect') : t('Connect Wallet')\r\n                    })()}\r\n                </Button>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={onClose}\r\n                sx={{\r\n                    \"& > .MuiBackdrop-root\": {\r\n                        backdropFilter: \"blur(10px)\"\r\n                    }\r\n                }}\r\n            >\r\n                <Box sx={{ ...modalStyle, width: { xs: '95%', md: '400px' } }}>\r\n                    <Box\r\n                        sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => setOpen(false)}\r\n                    >\r\n                        <Typography>Connect to a wallet</Typography>\r\n                        <IconX />\r\n                    </Box >\r\n                    {\r\n                        wallets.map((wallet, index) => (\r\n                            <Box\r\n                                key={index}\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    width: '100%',\r\n                                    bgcolor: 'rgb(250,250,255)',\r\n                                    border: '1px solid rgb(235,236,255)',\r\n                                    padding: '20px',\r\n                                    borderRadius: '15px',\r\n                                    my: 2,\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                                onClick={async () => {\r\n                                    setConnect(wallet.name)\r\n                                    await login(wallet.id);\r\n                                }}\r\n\r\n                            >\r\n                                <img src={wallet.logo} alt='walletlogo' style={{ width: '32px', height: '32px' }} />\r\n                                <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                    <Typography sx={{ lineHeight: '30px', px: 3 }}>{wallet.name}</Typography>\r\n                                    {\r\n                                        loading && (connecting === wallet.name) &&\r\n                                        <Typography sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <FiberManualRecordIcon color='info' sx={{ mr: 1 }} />\r\n                                            {isXs ? '' : 'connecting'}\r\n                                        </Typography>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n                        ))\r\n                    }\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectButton\r\n","export function formart(address: string): string {\r\n    return address.slice(0, 4) + '...' + address.slice(-4)\r\n}\r\n","import React, { useState } from 'react'\r\nimport { styled, alpha } from '@mui/material/styles'\r\nimport Button from '@mui/material/Button'\r\nimport Menu, { MenuProps } from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport LanguageIcon from '@mui/icons-material/Language'\r\nimport { useTranslation } from 'src/context/Localization'\r\n\r\n\r\n\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        {...props}\r\n    />\r\n))(({ theme }) => ({\r\n    '& .MuiPaper-root': {\r\n        borderRadius: 16,\r\n        marginTop: theme.spacing(1),\r\n        minWidth: 180,\r\n        color:\r\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n        boxShadow:\r\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n        '& .MuiMenu-list': {\r\n            padding: '10px 5px',\r\n        },\r\n        '& .MuiMenuItem-root': {\r\n            '& .MuiSvgIcon-root': {\r\n                fontSize: 18,\r\n                color: theme.palette.text.secondary,\r\n                marginRight: theme.spacing(1.5),\r\n            },\r\n            '&:active': {\r\n                backgroundColor: alpha(\r\n                    theme.palette.primary.main,\r\n                    theme.palette.action.selectedOpacity,\r\n                )\r\n            }\r\n        }\r\n    }\r\n}))\r\n\r\nconst LangMenu = [\r\n    {\r\n        locale: 'en-US',\r\n        language: 'English',\r\n        code: 'en'\r\n    }, {\r\n        locale: 'ja-JP',\r\n        language: '日本語',\r\n        code: 'ja'\r\n    }\r\n]\r\n\r\nfunction LanguageSelector() {\r\n\r\n    const { setLanguage } = useTranslation()\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n    const open = Boolean(anchorEl)\r\n\r\n    const openModal = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const closeModal = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const selectLang = (index) => {\r\n        setLanguage(LangMenu[index])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                sx={{\r\n                    bgcolor: '#e57a3b',\r\n                    borderRadius: '9999px',\r\n                    color: '#333',\r\n                    py: 1.3,\r\n                    fontSize: '18px',\r\n                    '&:hover': {\r\n                        bgcolor: '#e57a3b'\r\n                    },\r\n                    '& svg': {\r\n                        fill: '#fff'\r\n                    }\r\n                }}\r\n                aria-controls={open ? 'demo-customized-menu' : undefined}\r\n                onClick={openModal}\r\n            >\r\n                <LanguageIcon />\r\n            </Button>\r\n            <StyledMenu\r\n                id=\"demo-customized-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={closeModal}\r\n                sx={{\r\n                    '& img': {\r\n                        pr: 1,\r\n                        width: '24px',\r\n                        height: '20px'\r\n                    }\r\n                }}\r\n            >\r\n                {\r\n                    LangMenu.map((lang, index) => (\r\n                        <MenuItem\r\n                            key={index}\r\n                            onClick={() => selectLang(index)}\r\n                        >\r\n                            {lang.language}\r\n                        </MenuItem>\r\n                    ))\r\n                }\r\n            </StyledMenu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageSelector","import React from 'react'\r\nimport { Typography, useMediaQuery, Avatar, Box } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport { IconMenu2, IconExternalLink } from '@tabler/icons'\r\nimport ConnectButton from './ConnectWallet'\r\nimport SelectNetwork from './SelectNetwork'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport LanguageSelector from './LanguageSelector'\r\nimport { useTranslation } from 'src/context/Localization'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\ninterface IHeader {\r\n    handleDrawerToggle?: () => void\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    topBar: {\r\n        backgroundColor: 'rgb(255, 231, 172)',\r\n        width: '100%',\r\n        '& .MuiTypography-root': {\r\n            whiteSpace: 'nowrap',\r\n            color: '#666',\r\n            fontSize: '17px'\r\n        }\r\n    },\r\n    topBarShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: 1000\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n    toggleButton: {\r\n        marginLeft: '15px'\r\n    }\r\n}))\r\n\r\nfunction Header({ handleDrawerToggle }: IHeader) {\r\n    const is960 = useMediaQuery('(max-width:960px)')\r\n    const isXs = useMediaQuery('(max-width:768px)')\r\n    const classes = useStyles()\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <div className={classes.topBar}>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    justifyContent: { xs: 'end', md: 'space-between' },\r\n                    alignContent: 'center',\r\n                    p: 2\r\n                }}\r\n            >\r\n                {!isXs &&\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        flexGrow: 1,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        '& .MuiTypography-root': {\r\n                            px: 2\r\n                        }\r\n                    }}>\r\n                        <NavLink to='/home'>\r\n                            <Typography >{t('Home')}</Typography>\r\n                        </NavLink>\r\n                        <NavLink to='/swap'>\r\n                            <Typography>{t('Swap')}</Typography>\r\n                        </NavLink>\r\n                        <NavLink to='/liquidity'>\r\n                            <Typography>{t('Liquidity')}</Typography>\r\n                        </NavLink>\r\n                        <NavLink to='/bridge'>\r\n                            <Typography>{t('Bridge')}</Typography>\r\n                        </NavLink>\r\n                        <Link to={{ pathname: \"//staking-svc-matic.ceewen.xyz/\" }} target=\"_blank\">\r\n                            <Typography>{t('Stake')}</Typography>\r\n                        </Link>\r\n                        <NavLink to='/farm'>\r\n                            <Typography>{t('Farm')}</Typography>\r\n                        </NavLink>\r\n                        <NavLink to='/'>\r\n                            <Box sx={{ display: 'flex' }}>\r\n                                <Typography>{t('Docs')}</Typography>\r\n                                <IconExternalLink\r\n                                    color='#888'\r\n                                    style={{ marginLeft: '-14px', marginTop: '-3px' }}\r\n                                />\r\n                            </Box>\r\n                        </NavLink>\r\n                    </Box>\r\n                }\r\n                <Box display='flex' alignItems='center'>\r\n\r\n                </Box>\r\n                <Box display='flex' alignItems='center'>\r\n                    <LanguageSelector />\r\n                    {/* <SelectNetwork /> */}\r\n                    <ConnectButton />\r\n                    {\r\n                        is960 && (\r\n                            <div onClick={handleDrawerToggle} className={classes.toggleButton}>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        bgcolor: '#e77b3b',\r\n                                        boxShadow: '0px 1px 4px #ccc',\r\n                                        mt: '3px'\r\n                                    }}\r\n                                >\r\n                                    <IconMenu2 color='#FFF' />\r\n                                </Avatar>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Box, Link, Typography } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuList: {\r\n        '& .MuiTypography-root': {\r\n            color: '#FFF',\r\n            fontSize: '20px',\r\n            fontFamily: 'Square',\r\n            fontWeight: 500,\r\n            lineHeight: '55px'\r\n        },\r\n        '& .title': {\r\n            fontSize: '28px',\r\n            marginLeft: 20\r\n        }\r\n    }\r\n}))\r\n\r\nconst menuList = [\r\n    {\r\n        title: 'Dashboard'\r\n    }, {\r\n        title: 'Swap'\r\n    }\r\n]\r\n\r\nfunction MenuList() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.menuList}>\r\n            <Box sx={{ mt: 5 }}>\r\n                {\r\n                    menuList?.map((item, index) => (\r\n                        <Link\r\n                            key={index}\r\n                            component={NavLink}\r\n                            to={`${item.title.toLocaleLowerCase()}`}\r\n                            sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                mt: 1,\r\n                                borderRadius: '15px',\r\n                                textDecoration: 'none'\r\n                            }}\r\n                        >\r\n                            <Typography>{item.title}</Typography>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </Box >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MenuList\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@mui/styles'\r\nimport { Box, Drawer } from '@mui/material'\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { BrowserView, MobileView } from 'react-device-detect'\r\n\r\n// project component\r\nimport MenuList from './Menu'\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '350px',\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    drawerPaper: {\r\n        width: '280px',\r\n        color: theme.palette.text.primary,\r\n        borderRight: 'none'\r\n    },\r\n    scrollHeight: {\r\n        height: 'calc(100vh - 68px)',\r\n        paddingLeft: '16px',\r\n        paddingRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 'calc(100vh - 56px)'\r\n        }\r\n    }\r\n}))\r\n\r\n// -----------------------|| SIDEBAR DRAWER ||-----------------------//\r\n\r\ninterface IProps {\r\n    drawerOpen: boolean;\r\n    drawerToggle: () => void;\r\n}\r\n\r\nconst Sidebar = ({ drawerOpen, drawerToggle }: IProps) => {\r\n    const classes = useStyles()\r\n\r\n    const drawer = (\r\n        <React.Fragment>\r\n            <BrowserView>\r\n                <PerfectScrollbar component=\"div\" className={classes.scrollHeight}>\r\n                    <Box sx={{ mt: '20px', ml: '10px' }}>\r\n                        <MenuList />\r\n                    </Box>\r\n                </PerfectScrollbar>\r\n            </BrowserView>\r\n            <MobileView>\r\n                <Box sx={{ mt: '40px', ml: '10px' }}>\r\n                    <MenuList />\r\n                </Box>\r\n            </MobileView>\r\n        </React.Fragment>\r\n    )\r\n\r\n    const container = window.document.body\r\n\r\n    return (\r\n        <nav className={classes.drawer}>\r\n            <Drawer\r\n                container={container}\r\n                variant='temporary'\r\n                anchor=\"left\"\r\n                open={drawerOpen}\r\n                onClose={drawerToggle}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n                ModalProps={{ keepMounted: true }}\r\n                PaperProps={{\r\n                    sx: {\r\n                        backgroundColor: '#fff'\r\n                    }\r\n                }}\r\n            >\r\n                {drawer}\r\n            </Drawer>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/twitter.ef7d86f4.svg\";","export default __webpack_public_path__ + \"static/media/telegram.9da12ef5.svg\";","export default __webpack_public_path__ + \"static/media/discord.d4187bd1.svg\";","export default __webpack_public_path__ + \"static/media/medium.6ff127c7.svg\";","export default __webpack_public_path__ + \"static/media/facebook.01d703dd.svg\";","export default __webpack_public_path__ + \"static/media/instagram.34f98298.svg\";","export default __webpack_public_path__ + \"static/media/seven_chain_logo.5ec2cfe0.png\";","import React from 'react'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { Box, Typography } from '@mui/material'\r\nimport TwitterIcon from '../../asset/images/twitter.svg'\r\nimport TelegramIcon from '../../asset/images/telegram.svg'\r\nimport DiscordIcon from '../../asset/images/discord.svg'\r\nimport MediumIcon from '../../asset/images/medium.svg'\r\nimport FacebookIcon from '../../asset/images/facebook.svg'\r\nimport InstagramIcon from '../../asset/images/instagram.svg'\r\nimport SevenChainIcon from '../../asset/images/seven_chain_logo.png'\r\nimport { useTranslation } from 'src/context/Localization'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    footerView: {\r\n        padding: '20px 0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgb(245, 251, 255)',\r\n        '& .MuiTypography-root': {\r\n            color: '#555'\r\n        },\r\n        '& .MuiButton-root': {\r\n            color: '#333',\r\n            borderRadius: '20px',\r\n            padding: '0 20px',\r\n            background: 'linear-gradient(0deg,#f8bf4c,#e77b3b)'\r\n        }\r\n    }\r\n}))\r\n\r\nfunction Footer() {\r\n    const classes = useStyles()\r\n    const { t } = useTranslation()\r\n    return (\r\n        <div className={classes.footerView}>\r\n            <Box sx={{ width: '100vw', display: 'flex', justifyContent: 'space-around', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    m: 3\r\n                }}>\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        '& img': {\r\n                            width: '64px',\r\n                            height: '64px',\r\n                            marginBottom: '16px'\r\n                        }\r\n                    }}>\r\n                        <img src={SevenChainIcon} alt='svc_chain' />\r\n                        <Typography>{t('Copyright')}</Typography>\r\n                    </Box>\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        '& img': {\r\n                            width: 32,\r\n                            height: 32,\r\n                            mx: 1,\r\n                            mt: 2\r\n                        }\r\n                    }}>\r\n                        <img src={TwitterIcon} alt='twitter' />\r\n                        <img src={TelegramIcon} alt='telegram' />\r\n                        <img src={DiscordIcon} alt='discord' />\r\n                        <img src={MediumIcon} alt='medium' />\r\n                        <img src={FacebookIcon} alt='fecebook' />\r\n                        <img src={InstagramIcon} alt='instagram' />\r\n                    </Box>\r\n                </Box>\r\n                <Box sx={{ maxWidth: '840px', p: 2 }}>\r\n                    <Typography sx={{ fontSize: '24px', color: '#ffae5a !important', mb: 1.5 }}>{t('Disclaimer')}</Typography>\r\n                    <Typography sx={{ textIndent: '20px' }}>\r\n                        {t('Disclaimer Content')}\r\n                    </Typography>\r\n                </Box>\r\n\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { makeStyles } from '@mui/styles'\r\nimport { useMediaQuery } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport Header from '../header'\r\nimport Sidebar from '../sidebar'\r\nimport clsx from 'clsx'\r\nimport Footer from '../footer'\r\n\r\ninterface IViewBaseProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    mainView: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        height: '100vh'\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        padding: '40px 0 80px',\r\n        background: 'linear-gradient(rgb(255, 231, 172) 0%, rgb(242, 246, 250) 300px)',\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: 1000\r\n        }),\r\n        width: '100%'\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: 1000\r\n        }),\r\n        paddingLeft: 0\r\n    }\r\n}))\r\n\r\nfunction ViewBase({ children }: IViewBaseProps) {\r\n    const classes = useStyles()\r\n    const [mobileOpen, setMobileOpen] = useState(false)\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen)\r\n    }\r\n    const isMd = useMediaQuery('(max-width: 960px)')\r\n\r\n    return (\r\n        <div className={classes.mainView}>\r\n            <Header handleDrawerToggle={handleDrawerToggle} />\r\n            {\r\n                isMd && <Sidebar drawerOpen={mobileOpen} drawerToggle={handleDrawerToggle} />\r\n            }\r\n            {/* main content */}\r\n            <main\r\n                className={clsx([\r\n                    classes.content,\r\n                    {\r\n                        [classes.contentShift]: !isMd\r\n                    }\r\n                ])}\r\n            >\r\n                <div>{children}</div>\r\n            </main>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewBase\r\n","\r\nimport { styled } from '@mui/material/styles'\r\nimport Switch, { SwitchProps } from '@mui/material/Switch'\r\n\r\n\r\nconst SwitchLarge = styled((props: SwitchProps) => (\r\n    <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />\r\n))(({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    '& .MuiSwitch-switchBase': {\r\n        padding: 0,\r\n        margin: 2,\r\n        transitionDuration: '300ms',\r\n        '&.Mui-checked': {\r\n            transform: 'translateX(16px)',\r\n            color: '#fff',\r\n            '& + .MuiSwitch-track': {\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#2ECA45' : '#ffae5a',\r\n                opacity: 1,\r\n                border: 0,\r\n            },\r\n            '&.Mui-disabled + .MuiSwitch-track': {\r\n                opacity: 0.5,\r\n            }\r\n        },\r\n        '&.Mui-focusVisible .MuiSwitch-thumb': {\r\n            color: '#33cf4d',\r\n            border: '6px solid #fff',\r\n        },\r\n        '&.Mui-disabled .MuiSwitch-thumb': {\r\n            color:\r\n                theme.palette.mode === 'light'\r\n                    ? theme.palette.grey[100]\r\n                    : theme.palette.grey[600],\r\n        },\r\n        '&.Mui-disabled + .MuiSwitch-track': {\r\n            opacity: theme.palette.mode === 'light' ? 0.7 : 0.3,\r\n        }\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxSizing: 'border-box',\r\n        width: 22,\r\n        height: 22\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 26 / 2,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#E9E9EA' : '#39393D',\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color'], {\r\n            duration: 500,\r\n        })\r\n    }\r\n}))\r\n\r\nexport default SwitchLarge\r\n","import React, { useState } from 'react'\r\nimport Menu from '@mui/material/Menu'\r\nimport Box from '@mui/material/Box'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { Button, InputAdornment, OutlinedInput, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material'\r\nimport { IconAdjustmentsHorizontal, IconX, IconInfoCircle } from '@tabler/icons'\r\nimport SwitchLarge from './styled_components/SwitchLarge'\r\nimport { useTranslation } from 'src/context/Localization'\r\n\r\nfunction Settings() {\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const openModal = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const closeModal = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [slippage, setSlippage] = useState(0.5)\r\n    const onSlippageChange = (\r\n        event: any,\r\n        newSlip: number,\r\n    ) => {\r\n        if (newSlip)\r\n            setSlippage(newSlip)\r\n    }\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n                <Button\r\n                    onClick={openModal}\r\n                    size=\"small\"\r\n                    sx={{\r\n                        mr: 3,\r\n                        p: 2,\r\n                        bgcolor: '#fff',\r\n                        borderRadius: '20px',\r\n                        color: '#333',\r\n                        '&:hover': {\r\n                            bgcolor: '#fff'\r\n                        }\r\n                    }}\r\n                    aria-controls={open ? 'account-menu' : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                >\r\n                    <IconAdjustmentsHorizontal size={18} style={{ marginRight: '5px', color: '#666' }} />\r\n                    {t('Settings')}\r\n                </Button>\r\n            </Box>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                id=\"account-menu\"\r\n                open={open}\r\n                onClose={closeModal}\r\n                PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                        overflow: 'visible',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                        mt: 1.5,\r\n                        borderRadius: '10px',\r\n                        '& .MuiAvatar-root': {\r\n                            width: 32,\r\n                            height: 32,\r\n                            ml: -0.5,\r\n                            mr: 1,\r\n                        },\r\n                        '&:before': {\r\n                            content: '\"\"',\r\n                            display: 'block',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            right: 200,\r\n                            width: 10,\r\n                            height: 10,\r\n                            bgcolor: 'background.paper',\r\n                            transform: 'translateY(-50%) rotate(45deg)',\r\n                            zIndex: 0,\r\n                        },\r\n                    },\r\n                }}\r\n                transformOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n                anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n            >\r\n                <Box sx={{\r\n                    width: '360px',\r\n                    p: '10px 20px'\r\n                }}>\r\n                    <Box sx={{\r\n                        mb: 2,\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between'\r\n                    }}>\r\n                        <Typography>{t('Settings')}</Typography>\r\n                        <IconX onClick={closeModal} cursor='pointer' />\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Typography color='#666' fontSize={14}>{t('Slippage Tolerance')}</Typography>\r\n                        <Tooltip title='Your transaction will be revert if the price changes unfavorably by more than this percentage, Default is 0.5%' disableInteractive>\r\n                            <Button sx={{ display: 'flex' }}>\r\n                                <IconInfoCircle color='#666' />\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                        <ToggleButtonGroup\r\n                            value={slippage}\r\n                            exclusive\r\n                            onChange={onSlippageChange}\r\n                            sx={{\r\n                                '& .MuiToggleButton-root': {\r\n                                    mr: 0.5,\r\n                                    minWidth: '60px',\r\n                                    border: '1px solid #ccc !important',\r\n                                    borderRadius: '20px !important'\r\n                                }\r\n                            }}\r\n                        >\r\n                            <ToggleButton value={0.1}>0.1%</ToggleButton>\r\n                            <ToggleButton value={0.5}>0.5%</ToggleButton>\r\n                            <ToggleButton value={1}>1%</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                        <OutlinedInput\r\n                            sx={{\r\n                                '& fieldset': {\r\n                                    borderRadius: '20px'\r\n                                },\r\n                                '&.Mui-focused fieldset': {\r\n                                    borderColor: '#ffae5a !important',\r\n                                },\r\n                                '&:hover fieldset': {\r\n                                    borderColor: '#ffae5a !important',\r\n                                }\r\n                            }}\r\n                            type='number'\r\n                            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n                        />\r\n                    </Box>\r\n                    <Box mt={1}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Typography color='#666' fontSize={14}>Transaction Deadline</Typography>\r\n                            <Tooltip title='Your transaction will be revert if it is pending for more than this long' disableInteractive>\r\n                                <Button sx={{ display: 'flex', ml: -1.5 }}>\r\n                                    <IconInfoCircle color='#666' />\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                        <OutlinedInput\r\n                            sx={{\r\n                                '& fieldset': {\r\n                                    borderRadius: '20px'\r\n                                },\r\n                                '&.Mui-focused fieldset': {\r\n                                    borderColor: '#ffae5a !important',\r\n                                },\r\n                                '&:hover fieldset': {\r\n                                    borderColor: '#ffae5a !important',\r\n                                }\r\n                            }}\r\n                            type='number'\r\n                            value={30}\r\n                            endAdornment={<InputAdornment position=\"end\">minutes</InputAdornment>}\r\n                            inputProps={{\r\n\r\n                                'aria-label': 'percentage',\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                    <Box mt={1}>\r\n                        <Typography color='#666' fontSize={14}>Safe Mode</Typography>\r\n                        <Box sx={{ display: 'flex' }}>\r\n                            <SwitchLarge sx={{ mt: 1 }} />\r\n                            <Typography color='#666' fontSize={14} px={2}>\r\n                                Prevent high price impact trades. Disable at your own risk.\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import { createAction } from '@reduxjs/toolkit'\r\nimport { DerivedPairDataNormalized, PairDataNormalized, PairDataTimeWindowEnum } from './types'\r\n\r\nexport enum Field {\r\n    INPUT = 'INPUT',\r\n    OUTPUT = 'OUTPUT',\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n    field: Field\r\n    typedValue: string\r\n    inputCurrencyId?: string\r\n    outputCurrencyId?: string\r\n    recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\nexport const updatePairData = createAction<{\r\n    pairData: PairDataNormalized\r\n    pairId: string\r\n    timeWindow: PairDataTimeWindowEnum\r\n}>('swap/updatePairData')\r\nexport const updateDerivedPairData = createAction<{\r\n    pairData: DerivedPairDataNormalized\r\n    pairId: string\r\n    timeWindow: PairDataTimeWindowEnum\r\n}>('swap/updateDerivedPairData')","import { Contract } from '@ethersproject/contracts'\r\nimport type { Provider } from '@ethersproject/providers'\r\nimport type { Signer } from '@ethersproject/abstract-signer'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport memoize from 'lodash/memoize'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport invariant from 'tiny-invariant'\r\nimport warning from 'tiny-warning'\r\n\r\n// warns if addresses are not checksummed\r\n// eslint-disable-next-line consistent-return\r\nexport function validateAndParseAddress(address: string): string {\r\n    try {\r\n        const checksummedAddress = getAddress(address)\r\n        warning(address === checksummedAddress, `${address} is not checksummed.`)\r\n        return checksummedAddress\r\n    } catch (error) {\r\n        invariant(false, `${address} is not a valid address.`)\r\n    }\r\n}\r\n\r\nexport const isAddress = memoize((value: any): string | false => {\r\n    try {\r\n        return getAddress(value)\r\n    } catch {\r\n        return false\r\n    }\r\n})\r\n\r\nexport function getContract(address: string, ABI: any, signer?: Signer | Provider): Contract {\r\n    if (!isAddress(address) || address === AddressZero) {\r\n        throw Error(`Invalid 'address' parameter '${address}'.`)\r\n    }\r\n\r\n    return new Contract(address, ABI, signer)\r\n}\r\n","import JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\nimport _Decimal from 'decimal.js-light'\r\nimport _Big from 'big.js'\r\nimport toFormat from 'toformat'\r\n\r\n\r\nconst Decimal = toFormat(_Decimal)\r\nconst Big = toFormat(_Big)\r\nexport type BigintIsh = JSBI | number | string\r\n\r\n\r\nexport enum Rounding {\r\n    ROUND_DOWN,\r\n    ROUND_HALF_UP,\r\n    ROUND_UP,\r\n}\r\n\r\nconst toSignificantRounding = {\r\n    [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\r\n    [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\r\n    [Rounding.ROUND_UP]: Decimal.ROUND_UP,\r\n}\r\n\r\nconst enum RoundingMode {\r\n    /**\r\n     * Rounds towards zero.\r\n     * I.e. truncate, no rounding.\r\n     */\r\n    RoundDown = 0,\r\n    /**\r\n     * Rounds towards nearest neighbour.\r\n     * If equidistant, rounds away from zero.\r\n     */\r\n    RoundHalfUp = 1,\r\n    /**\r\n     * Rounds towards nearest neighbour.\r\n     * If equidistant, rounds towards even neighbour.\r\n     */\r\n    RoundHalfEven = 2,\r\n    /**\r\n     * Rounds away from zero.\r\n     */\r\n    RoundUp = 3,\r\n}\r\n\r\nconst toFixedRounding = {\r\n    [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\r\n    [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\r\n    [Rounding.ROUND_UP]: RoundingMode.RoundUp,\r\n}\r\n\r\nexport class Fraction {\r\n    public readonly numerator: JSBI\r\n\r\n    public readonly denominator: JSBI\r\n\r\n    public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\r\n        this.numerator = JSBI.BigInt(numerator)\r\n        this.denominator = JSBI.BigInt(denominator)\r\n    }\r\n\r\n    private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\r\n        if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\r\n            return new Fraction(fractionish)\r\n\r\n        if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\r\n        throw new Error('Could not parse fraction')\r\n    }\r\n\r\n    // performs floor division\r\n    public get quotient(): JSBI {\r\n        return JSBI.divide(this.numerator, this.denominator)\r\n    }\r\n\r\n    // remainder after floor division\r\n    public get remainder(): Fraction {\r\n        return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\r\n    }\r\n\r\n    public invert(): Fraction {\r\n        return new Fraction(this.denominator, this.numerator)\r\n    }\r\n\r\n    public add(other: Fraction | BigintIsh): Fraction {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n            return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\r\n        }\r\n        return new Fraction(\r\n            JSBI.add(\r\n                JSBI.multiply(this.numerator, otherParsed.denominator),\r\n                JSBI.multiply(otherParsed.numerator, this.denominator)\r\n            ),\r\n            JSBI.multiply(this.denominator, otherParsed.denominator)\r\n        )\r\n    }\r\n\r\n    public subtract(other: Fraction | BigintIsh): Fraction {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n            return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\r\n        }\r\n        return new Fraction(\r\n            JSBI.subtract(\r\n                JSBI.multiply(this.numerator, otherParsed.denominator),\r\n                JSBI.multiply(otherParsed.numerator, this.denominator)\r\n            ),\r\n            JSBI.multiply(this.denominator, otherParsed.denominator)\r\n        )\r\n    }\r\n\r\n    public lessThan(other: Fraction | BigintIsh): boolean {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        return JSBI.lessThan(\r\n            JSBI.multiply(this.numerator, otherParsed.denominator),\r\n            JSBI.multiply(otherParsed.numerator, this.denominator)\r\n        )\r\n    }\r\n\r\n    public equalTo(other: Fraction | BigintIsh): boolean {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        return JSBI.equal(\r\n            JSBI.multiply(this.numerator, otherParsed.denominator),\r\n            JSBI.multiply(otherParsed.numerator, this.denominator)\r\n        )\r\n    }\r\n\r\n    public greaterThan(other: Fraction | BigintIsh): boolean {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        return JSBI.greaterThan(\r\n            JSBI.multiply(this.numerator, otherParsed.denominator),\r\n            JSBI.multiply(otherParsed.numerator, this.denominator)\r\n        )\r\n    }\r\n\r\n    public multiply(other: Fraction | BigintIsh): Fraction {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        return new Fraction(\r\n            JSBI.multiply(this.numerator, otherParsed.numerator),\r\n            JSBI.multiply(this.denominator, otherParsed.denominator)\r\n        )\r\n    }\r\n\r\n    public divide(other: Fraction | BigintIsh): Fraction {\r\n        const otherParsed = Fraction.tryParseFraction(other)\r\n        return new Fraction(\r\n            JSBI.multiply(this.numerator, otherParsed.denominator),\r\n            JSBI.multiply(this.denominator, otherParsed.numerator)\r\n        )\r\n    }\r\n\r\n    public toSignificant(\r\n        significantDigits: number,\r\n        format: object = { groupSeparator: '' },\r\n        rounding: Rounding = Rounding.ROUND_HALF_UP\r\n    ): string {\r\n        invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\r\n        invariant(significantDigits > 0, `${significantDigits} is not positive.`)\r\n\r\n        Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\r\n        const quotient = new Decimal(this.numerator.toString())\r\n            .div(this.denominator.toString())\r\n            .toSignificantDigits(significantDigits)\r\n        return quotient.toFormat(quotient.decimalPlaces(), format)\r\n    }\r\n\r\n    public toFixed(\r\n        decimalPlaces: number,\r\n        format: object = { groupSeparator: '' },\r\n        rounding: Rounding = Rounding.ROUND_HALF_UP\r\n    ): string {\r\n        invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\r\n        invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\r\n\r\n        Big.DP = decimalPlaces\r\n        Big.RM = toFixedRounding[rounding]\r\n        return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\r\n    }\r\n\r\n    /**\r\n     * Helper method for converting any super class back to a fraction\r\n     */\r\n    public get asFraction(): Fraction {\r\n        return new Fraction(this.numerator, this.denominator)\r\n    }\r\n}\r\n","import { ChainId } from \"../config/constants/chains\"\r\nimport invariant from 'tiny-invariant'\r\nimport { validateAndParseAddress } from \"./index\"\r\nimport { TokenAddressMap } from \"./wrappedTokenInfo\"\r\nimport JSBI from 'jsbi'\r\nimport _Big from 'big.js'\r\nimport toFormat from 'toformat'\r\nimport { BigintIsh, Fraction, Rounding } from \"./fraction\"\r\n\r\ntype ExtensionValue = string | number | boolean | null | undefined\r\n\r\nconst Big = toFormat(_Big)\r\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n\r\nexport interface TokenInfo {\r\n    readonly chainId: number\r\n    readonly address: string\r\n    readonly name: string\r\n    readonly decimals: number\r\n    readonly symbol: string\r\n    readonly logoURI?: string\r\n    readonly tags?: string[]\r\n    readonly extensions?: {\r\n        readonly [key: string]:\r\n        | {\r\n            [key: string]:\r\n            | {\r\n                [key: string]: ExtensionValue\r\n            }\r\n            | ExtensionValue\r\n        }\r\n        | ExtensionValue\r\n    }\r\n}\r\n\r\nexport interface Version {\r\n    readonly major: number\r\n    readonly minor: number\r\n    readonly patch: number\r\n}\r\n\r\nexport enum VersionUpgrade {\r\n    NONE,\r\n    PATCH,\r\n    MINOR,\r\n    MAJOR,\r\n}\r\n\r\nexport interface Tags {\r\n    readonly [tagId: string]: {\r\n        readonly name: string\r\n        readonly description: string\r\n    }\r\n}\r\n\r\nexport interface TokenList {\r\n    readonly name: string\r\n    readonly timestamp: string\r\n    readonly version: Version\r\n    readonly tokens: TokenInfo[]\r\n    readonly keywords?: string[]\r\n    readonly tags?: Tags\r\n    readonly logoURI?: string\r\n}\r\n\r\n\r\nexport interface SerializedToken {\r\n    chainId: number\r\n    address: string\r\n    decimals: number\r\n    symbol: string\r\n    name?: string\r\n    projectLink?: string\r\n}\r\n\r\n\r\nexport abstract class BaseCurrency {\r\n    /**\r\n     * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\r\n     */\r\n    public abstract readonly isNative: boolean\r\n\r\n    /**\r\n     * Returns whether the currency is a token that is usable in PancakeSwap without wrapping\r\n     */\r\n    public abstract readonly isToken: boolean\r\n\r\n    /**\r\n     * The chain ID on which this currency resides\r\n     */\r\n    public readonly chainId: number\r\n\r\n    /**\r\n     * The decimals used in representing currency amounts\r\n     */\r\n    public readonly decimals: number\r\n\r\n    /**\r\n     * The symbol of the currency, i.e. a short textual non-unique identifier\r\n     */\r\n    public readonly symbol: string\r\n\r\n    /**\r\n     * The name of the currency, i.e. a descriptive textual non-unique identifier\r\n     */\r\n    public readonly name?: string\r\n\r\n    public readonly logoURI?: string\r\n\r\n    /**\r\n     * Constructs an instance of the base class `BaseCurrency`.\r\n     * @param chainId the chain ID on which this currency resides\r\n     * @param decimals decimals of the currency\r\n     * @param symbol symbol of the currency\r\n     * @param name of the currency\r\n     */\r\n    protected constructor(chainId: number, decimals: number, symbol: string, name?: string, logoURI?: string) {\r\n        invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\r\n        invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\r\n\r\n        this.chainId = chainId\r\n        this.decimals = decimals\r\n        this.symbol = symbol\r\n        this.name = name\r\n        this.logoURI = logoURI\r\n    }\r\n\r\n    /**\r\n     * Returns whether this currency is functionally equivalent to the other currency\r\n     * @param other the other currency\r\n     */\r\n    public abstract equals(other: Currency): boolean\r\n\r\n    /**\r\n     * Return the wrapped version of this currency that can be used with the PancakeSwap contracts. Currencies must\r\n     * implement this to be used in PancakeSwap\r\n     */\r\n    public abstract get wrapped(): Token\r\n}\r\n\r\nexport abstract class NativeCurrency extends BaseCurrency {\r\n    public readonly isNative: true = true\r\n\r\n    public readonly isToken: false = false\r\n}\r\n\r\nexport class Native extends NativeCurrency {\r\n    protected constructor({\r\n        chainId,\r\n        decimals,\r\n        name,\r\n        symbol,\r\n        logoURI\r\n    }: {\r\n        chainId: number\r\n        decimals: number\r\n        symbol: string\r\n        name: string\r\n        logoURI: string\r\n    }) {\r\n        super(chainId, decimals, symbol, name, logoURI)\r\n    }\r\n\r\n    public get wrapped(): Token {\r\n        const wnative = WNATIVE[this.chainId]\r\n        invariant(!!wnative, 'WRAPPED')\r\n        return wnative\r\n    }\r\n\r\n    private static cache: { [chainId: number]: Native } = {}\r\n\r\n    public static onChain(chainId: number): Native {\r\n        if (chainId in this.cache) {\r\n            return this.cache[chainId]\r\n        }\r\n        invariant(!!NATIVE[chainId], 'NATIVE_CURRENCY')\r\n        const { decimals, name, symbol, logoURI } = NATIVE[chainId]\r\n        return (this.cache[chainId] = new Native({ chainId, decimals, symbol, name, logoURI }))\r\n    }\r\n\r\n    public equals(other: Currency): boolean {\r\n        return other.isNative && other.chainId === this.chainId\r\n    }\r\n}\r\n\r\n\r\nexport class Token extends BaseCurrency {\r\n    public readonly isNative: false = false\r\n\r\n    public readonly isToken: true = true\r\n\r\n    /**\r\n     * The contract address on the chain on which this token lives\r\n     */\r\n    public readonly address: string\r\n\r\n    public readonly projectLink?: string\r\n\r\n    public readonly logoURI: string\r\n\r\n    public constructor(\r\n        chainId: number,\r\n        address: string,\r\n        decimals: number,\r\n        symbol: string,\r\n        name?: string,\r\n        projectLink?: string\r\n    ) {\r\n        super(chainId, decimals, symbol, name)\r\n        this.address = address\r\n        this.projectLink = projectLink\r\n    }\r\n\r\n    /**\r\n     * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n     * @param other other token to compare\r\n     */\r\n    public equals(other: Currency): boolean {\r\n        return other.isToken && this.chainId === other.chainId && this.address === other.address\r\n    }\r\n\r\n    /**\r\n     * Returns true if the address of this token sorts before the address of the other token\r\n     * @param other other token to compare\r\n     * @throws if the tokens have the same address\r\n     * @throws if the tokens are on different chains\r\n     */\r\n    public sortsBefore(other: Token): boolean {\r\n        invariant(this.chainId === other.chainId, 'CHAIN_IDS')\r\n        invariant(this.address !== other.address, 'ADDRESSES')\r\n        return this.address.toLowerCase() < other.address.toLowerCase()\r\n    }\r\n\r\n    /**\r\n     * Return this token, which does not need to be wrapped\r\n     */\r\n    public get wrapped(): Token {\r\n        return this\r\n    }\r\n\r\n    public get serialize(): SerializedToken {\r\n        return {\r\n            address: this.address,\r\n            chainId: this.chainId,\r\n            decimals: this.decimals,\r\n            symbol: this.symbol,\r\n            name: this.name,\r\n            projectLink: this.projectLink,\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport type Currency = NativeCurrency | Token\r\n\r\n\r\n// /**\r\n//  * Represents an ERC20 token with a unique address and some metadata.\r\n//  */\r\nexport class ERC20Token extends Token {\r\n    public constructor(\r\n        chainId: number,\r\n        address: string,\r\n        decimals: number,\r\n        symbol: string,\r\n        name?: string,\r\n        projectLink?: string\r\n    ) {\r\n        super(chainId, validateAndParseAddress(address), decimals, symbol, name, projectLink)\r\n    }\r\n}\r\n\r\n/**\r\n * Return the upgrade type from the base version to the update version.\r\n * Note that downgrades and equivalent versions are both treated as `NONE`.\r\n * @param base base list\r\n * @param update update to the list\r\n */\r\nexport function getVersionUpgrade(base: Version, update: Version): VersionUpgrade {\r\n    if (update.major > base.major) {\r\n        return VersionUpgrade.MAJOR\r\n    }\r\n    if (update.major < base.major) {\r\n        return VersionUpgrade.NONE\r\n    }\r\n    if (update.minor > base.minor) {\r\n        return VersionUpgrade.MINOR\r\n    }\r\n    if (update.minor < base.minor) {\r\n        return VersionUpgrade.NONE\r\n    }\r\n    return update.patch > base.patch ? VersionUpgrade.PATCH : VersionUpgrade.NONE\r\n}\r\n\r\nexport class CurrencyAmount<T extends Currency> extends Fraction {\r\n    public readonly currency: T\r\n\r\n    public readonly decimalScale: JSBI\r\n\r\n    /**\r\n     * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\r\n     * @param currency the currency in the amount\r\n     * @param rawAmount the raw token or ether amount\r\n     */\r\n    public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\r\n        return new CurrencyAmount(currency, rawAmount)\r\n    }\r\n\r\n    /**\r\n     * Construct a currency amount with a denominator that is not equal to 1\r\n     * @param currency the currency\r\n     * @param numerator the numerator of the fractional token amount\r\n     * @param denominator the denominator of the fractional token amount\r\n     */\r\n    public static fromFractionalAmount<T extends Currency>(\r\n        currency: T,\r\n        numerator: BigintIsh,\r\n        denominator: BigintIsh\r\n    ): CurrencyAmount<T> {\r\n        return new CurrencyAmount(currency, numerator, denominator)\r\n    }\r\n\r\n    protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\r\n        super(numerator, denominator)\r\n        invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\r\n        this.currency = currency\r\n        this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\r\n    }\r\n\r\n    public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\r\n        invariant(this.currency.equals(other.currency), 'CURRENCY')\r\n        const added = super.add(other)\r\n        return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\r\n    }\r\n\r\n    public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\r\n        invariant(this.currency.equals(other.currency), 'CURRENCY')\r\n        const subtracted = super.subtract(other)\r\n        return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\r\n    }\r\n\r\n    public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\r\n        const multiplied = super.multiply(other)\r\n        return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\r\n    }\r\n\r\n    public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\r\n        const divided = super.divide(other)\r\n        return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\r\n    }\r\n\r\n    public toSignificant(significantDigits = 6, format?: object, rounding: Rounding = Rounding.ROUND_DOWN): string {\r\n        return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\r\n    }\r\n\r\n    public toFixed(\r\n        decimalPlaces: number = this.currency.decimals,\r\n        format?: object,\r\n        rounding: Rounding = Rounding.ROUND_DOWN\r\n    ): string {\r\n        invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\r\n        return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\r\n    }\r\n\r\n    public toExact(format: object = { groupSeparator: '' }): string {\r\n        Big.DP = this.currency.decimals\r\n        return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\r\n    }\r\n\r\n    public get wrapped(): CurrencyAmount<Token> {\r\n        if (this.currency.isToken) return this as CurrencyAmount<Token>\r\n        return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\r\n    }\r\n}\r\n\r\nexport const WETH = {\r\n    [ChainId.ETHEREUM]: new ERC20Token(\r\n        ChainId.ETHEREUM,\r\n        '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\r\n        18,\r\n        'WETH',\r\n        'Wrapped Ether',\r\n        'https://weth.io'\r\n    ),\r\n    [ChainId.GOERLI]: new ERC20Token(\r\n        ChainId.GOERLI,\r\n        '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\r\n        18,\r\n        'WETH',\r\n        'Wrapped Ether',\r\n        'https://weth.io'\r\n    ),\r\n}\r\n\r\nexport const WMATIC = {\r\n    [ChainId.ETHEREUM]: new ERC20Token(\r\n        ChainId.ETHEREUM,\r\n        '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\r\n        18,\r\n        'WMATIC',\r\n        'Wrapped Matic',\r\n        'https://polygon.technology/'\r\n    ),\r\n    [ChainId.POLYGON]: new ERC20Token(\r\n        ChainId.POLYGON,\r\n        '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\r\n        18,\r\n        'WMATIC',\r\n        'Wrapped BNB',\r\n        'https://polygon.technology/'\r\n    ),\r\n    [ChainId.MUMBAI]: new ERC20Token(\r\n        ChainId.MUMBAI,\r\n        '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889',\r\n        18,\r\n        'WMATIC',\r\n        'Wrapped BNB',\r\n        'https://polygon.technology/'\r\n    )\r\n}\r\n\r\nexport const WNATIVE: Record<number, ERC20Token> = {\r\n    [ChainId.ETHEREUM]: WETH[ChainId.ETHEREUM],\r\n    [ChainId.GOERLI]: WETH[ChainId.GOERLI],\r\n    [ChainId.POLYGON]: WMATIC[ChainId.POLYGON],\r\n    [ChainId.MUMBAI]: WMATIC[ChainId.MUMBAI],\r\n}\r\n\r\n\r\nexport const NATIVE: Record<\r\n    number,\r\n    {\r\n        name: string\r\n        symbol: string\r\n        decimals: number,\r\n        logoURI?: string\r\n    }\r\n> = {\r\n    [ChainId.ETHEREUM]: {\r\n        name: 'Ether',\r\n        symbol: 'ETH',\r\n        decimals: 18\r\n    },\r\n    [ChainId.GOERLI]: {\r\n        name: 'Goerli Ether',\r\n        symbol: 'GOR',\r\n        decimals: 18\r\n    },\r\n    [ChainId.POLYGON]: {\r\n        name: 'Native Token',\r\n        symbol: 'MATIC',\r\n        decimals: 18,\r\n        logoURI: 'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png'\r\n    },\r\n    [ChainId.MUMBAI]: {\r\n        name: 'Native Token',\r\n        symbol: 'MATIC',\r\n        decimals: 18,\r\n        logoURI: 'https://s2.coinmarketcap.com/static/img/coins/64x64/3890.png'\r\n    },\r\n    [ChainId.SVC]: {\r\n        name: 'SVC Token',\r\n        symbol: 'SVC',\r\n        decimals: 18,\r\n    }\r\n}\r\n\r\n\r\nexport const EMPTY_LIST: TokenAddressMap<ChainId> = {\r\n    [ChainId.ETHEREUM]: {},\r\n    [ChainId.GOERLI]: {},\r\n    [ChainId.POLYGON]: {},\r\n    [ChainId.MUMBAI]: {},\r\n    [ChainId.SVC]: {}\r\n}\r\n","import React from 'react'\r\nimport { configureChains, createClient } from 'wagmi'\r\nimport memoize from 'lodash/memoize'\r\nimport { polygon, polygonMumbai, mainnet, goerli } from 'wagmi/chains'\r\nimport { CoinbaseWalletConnector } from 'wagmi/connectors/coinbaseWallet'\r\nimport { InjectedConnector } from 'wagmi/connectors/injected'\r\nimport { MetaMaskConnector } from 'wagmi/connectors/metaMask'\r\nimport { WalletConnectConnector } from 'wagmi/connectors/walletConnect'\r\nimport { jsonRpcProvider } from 'wagmi/providers/jsonRpc'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport useSWRImmutable from 'swr/immutable'\r\nimport { useAccount, WagmiConfig, WagmiConfigProps, useNetwork } from 'wagmi'\r\nimport { Provider, WebSocketProvider } from '@wagmi/core'\r\n\r\nconst CHAINS = [polygon, polygonMumbai, mainnet, goerli];\r\n\r\nexport const { provider, chains } = configureChains(CHAINS, [\r\n    jsonRpcProvider({\r\n        rpc: (chain) => {\r\n            return { http: chain.rpcUrls.default }\r\n        }\r\n    })\r\n])\r\n\r\nexport const injectedConnector = new InjectedConnector({\r\n    chains,\r\n    options: {\r\n        shimDisconnect: false,\r\n        shimChainChangedDisconnect: true,\r\n    },\r\n})\r\n\r\nexport const coinbaseConnector = new CoinbaseWalletConnector({\r\n    chains,\r\n    options: {\r\n        appName: 'svc-dex'\r\n    },\r\n})\r\n\r\nexport const walletConnectConnector = new WalletConnectConnector({\r\n    chains,\r\n    options: {\r\n        qrcode: true,\r\n    },\r\n})\r\n\r\nexport const walletConnectNoQrCodeConnector = new WalletConnectConnector({\r\n    chains,\r\n    options: {\r\n        qrcode: false,\r\n    },\r\n})\r\n\r\nexport const metaMaskConnector = new MetaMaskConnector({\r\n    chains,\r\n    options: {\r\n        shimDisconnect: false,\r\n        shimChainChangedDisconnect: true,\r\n    },\r\n})\r\n\r\nexport const client = createClient({\r\n    autoConnect: false,\r\n    provider,\r\n    connectors: [\r\n        metaMaskConnector,\r\n        walletConnectConnector,\r\n        coinbaseConnector\r\n    ],\r\n})\r\n\r\nexport const CHAIN_IDS = chains.map((c) => c.id)\r\n\r\nexport const isChainSupported = memoize((chainId: number) => CHAIN_IDS.includes(chainId))\r\nexport const isChainTestnet = memoize((chainId: number) => chains.find((c) => c.id === chainId)?.testnet)\r\n\r\nexport function WagmiProvider<TProvider extends Provider, TWebSocketProvider extends WebSocketProvider>(\r\n    props: React.PropsWithChildren<WagmiConfigProps<TProvider, TWebSocketProvider>>,\r\n) {\r\n    return (\r\n        <WagmiConfig client={props.client}>\r\n            <Web3LibraryProvider>{props.children}</Web3LibraryProvider>\r\n        </WagmiConfig>\r\n    )\r\n}\r\n\r\nconst Web3LibraryContext = React.createContext<Web3Provider | undefined>(undefined)\r\n\r\nexport const useWeb3LibraryContext = () => {\r\n    return React.useContext(Web3LibraryContext)\r\n}\r\n\r\nconst Web3LibraryProvider: React.FC<React.PropsWithChildren> = (props) => {\r\n    const { connector } = useAccount()\r\n    const { chain } = useNetwork()\r\n    const { data: library } = useSWRImmutable(connector && ['web3-library', connector, chain], async () => {\r\n        const provider = await connector?.getProvider()\r\n        return new Web3Provider(provider)\r\n    })\r\n    return <Web3LibraryContext.Provider value={library}>{props.children}</Web3LibraryContext.Provider>\r\n}\r\n","import { atom, useAtom } from 'jotai'\r\n\r\nconst sessionChainIdAtom = atom<number>(0)\r\n\r\nexport const useSessionChainId = () => {\r\n    return useAtom(sessionChainIdAtom)\r\n}\r\n","import { ChainId } from 'src/config/constants/chains'\r\nimport { atom, useAtomValue } from 'jotai'\r\n// import { useRouter } from 'next/router'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport { useDeferredValue } from 'react'\r\nimport { isChainSupported } from 'src/utils/wagmi'\r\nimport { useNetwork } from 'wagmi'\r\nimport { getChainId } from 'src/config/constants/chains'\r\nimport { useSessionChainId } from './useSessionChainId'\r\n\r\nconst queryChainIdAtom = atom(-1) // -1 unload, 0 no chainId on query\r\n\r\nqueryChainIdAtom.onMount = (set) => {\r\n    const params = new URL(window.location.href).searchParams\r\n    let chainId\r\n    // chain has higher priority than chainId\r\n    // keep chainId for backward compatible\r\n    const c = params.get('chain')\r\n    if (!c) {\r\n        chainId = params.get('chainId')\r\n    } else {\r\n        chainId = getChainId(c)\r\n    }\r\n    if (isChainSupported(+chainId)) {\r\n        set(+chainId)\r\n    } else {\r\n        set(0)\r\n    }\r\n}\r\n\r\nexport function useLocalNetworkChain() {\r\n    const [sessionChainId] = useSessionChainId()\r\n    // useRouter is kind of slow, we only get this query chainId once\r\n    const queryChainId = useAtomValue(queryChainIdAtom)\r\n\r\n    const [param] = useSearchParams()\r\n\r\n    const chainId = +(sessionChainId || getChainId(param.get('chain') as string) || queryChainId)\r\n\r\n    if (isChainSupported(chainId)) {\r\n        return chainId\r\n    }\r\n\r\n    return undefined\r\n}\r\n\r\nexport const useActiveChainId = () => {\r\n    const localChainId = useLocalNetworkChain()\r\n    const queryChainId = useAtomValue(queryChainIdAtom)\r\n\r\n    const { chain } = useNetwork()\r\n    const chainId = localChainId ?? chain?.id ?? (queryChainId >= 0 ? ChainId.MUMBAI : undefined)\r\n\r\n    const isNotMatched = useDeferredValue(chain && localChainId && chain.id !== localChainId)\r\n\r\n    return {\r\n        chainId,\r\n        isWrongNetwork: (chain?.unsupported ?? false) || isNotMatched,\r\n        isNotMatched,\r\n    }\r\n}\r\n","import { Token, SerializedToken } from \"./token\"\r\nimport { TokenInfo, TokenList } from \"./token\"\r\n\r\nexport interface SerializedWrappedToken extends SerializedToken {\r\n    chainId: number\r\n    address: string\r\n    decimals: number\r\n    symbol: string\r\n    name?: string\r\n    projectLink?: string\r\n    logoURI?: string\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n    public readonly logoURI: string | undefined\r\n\r\n    constructor(tokenInfo: TokenInfo) {\r\n        super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n        this.logoURI = tokenInfo.logoURI\r\n    }\r\n\r\n    public get serialize(): SerializedWrappedToken {\r\n        return {\r\n            address: this.address,\r\n            chainId: this.chainId,\r\n            decimals: this.decimals,\r\n            symbol: this.symbol,\r\n            name: this.name,\r\n            projectLink: this.projectLink,\r\n            logoURI: this.logoURI,\r\n        }\r\n    }\r\n}\r\n\r\nexport type TokenAddressMap<TChainId extends number> = Readonly<{\r\n    [chainId in TChainId]: Readonly<{\r\n        [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList }\r\n    }>\r\n}>\r\n\r\nexport function deserializeToken(serializedToken: SerializedWrappedToken): Token {\r\n    if (serializedToken.logoURI) {\r\n        return new WrappedTokenInfo({\r\n            chainId: serializedToken.chainId,\r\n            address: serializedToken.address,\r\n            decimals: serializedToken.decimals,\r\n            symbol: serializedToken.symbol || 'Unknown',\r\n            name: serializedToken.name || 'Unknown',\r\n            logoURI: serializedToken.logoURI,\r\n        })\r\n    }\r\n    return new Token(\r\n        serializedToken.chainId,\r\n        serializedToken.address,\r\n        serializedToken.decimals,\r\n        serializedToken.symbol,\r\n        serializedToken.name,\r\n        serializedToken.projectLink,\r\n    )\r\n}\r\n","export const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\r\nexport const COINGECKO = 'https://tokens.pancakeswap.finance/coingecko.json'\r\nexport const COINGECKO_ETH = 'https://tokens.coingecko.com/uniswap/all.json'\r\nexport const CMC = 'https://tokens.pancakeswap.finance/cmc.json'\r\n\r\nexport const ETH_URLS = [COINGECKO_ETH]\r\nexport const BSC_URLS = [PANCAKE_EXTENDED, CMC, COINGECKO]\r\n\r\n// List of official tokens list\r\nexport const OFFICIAL_LISTS = [PANCAKE_EXTENDED]\r\n\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\nexport const WARNING_LIST_URLS: string[] = []\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n    ...BSC_URLS,\r\n    ...ETH_URLS,\r\n    ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n    ...WARNING_LIST_URLS,\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = [PANCAKE_EXTENDED, COINGECKO_ETH]","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from 'src/utils/token';\r\n\r\nexport const fetchTokenList: Readonly<{\r\n    pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n    fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n    rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n    pending: createAction('lists/fetchTokenList/pending'),\r\n    fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n    rejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n\r\nexport const updateListVersion = createAction('lists/updateListVersion')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { atom, useAtom, useAtomValue } from 'jotai'\r\nimport { atomWithStorage } from 'jotai/utils'\r\nimport localForage from 'localforage'\r\n\r\n\r\nimport {\r\n    acceptListUpdate,\r\n    addList,\r\n    fetchTokenList,\r\n    removeList,\r\n    enableList,\r\n    disableList,\r\n    updateListVersion,\r\n} from './actions'\r\nimport { getVersionUpgrade, VersionUpgrade, TokenList } from 'src/utils/token'\r\n\r\nexport interface ListsState {\r\n    readonly byUrl: {\r\n        readonly [url: string]: {\r\n            readonly current: TokenList | null\r\n            readonly pendingUpdate: TokenList | null\r\n            readonly loadingRequestId: string | null\r\n            readonly error: string | null\r\n        }\r\n    }\r\n    // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n    readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n    // currently active lists\r\n    readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListByUrlState = ListsState['byUrl'][string]\r\n\r\nexport const NEW_LIST_STATE: ListByUrlState = {\r\n    error: null,\r\n    current: null,\r\n    loadingRequestId: null,\r\n    pendingUpdate: null,\r\n}\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nfunction noop() { }\r\nconst noopStorage = {\r\n    getItem: noop,\r\n    setItem: noop,\r\n    removeItem: noop,\r\n    keys: [],\r\n    getAllKeys: noop,\r\n}\r\n\r\n// eslint-disable-next-line symbol-description\r\nconst EMPTY = Symbol()\r\n\r\nexport const createListsAtom = (storeName: string, reducer: any, initialState: any) => {\r\n    /**\r\n     * Persist you redux state using IndexedDB\r\n     * @param {string} dbName - IndexedDB database name\r\n     */\r\n    function IndexedDBStorage(dbName: string) {\r\n        if (typeof window !== 'undefined') {\r\n            const db = localForage.createInstance({\r\n                name: dbName,\r\n                storeName,\r\n            })\r\n            return {\r\n                db,\r\n                getItem: async (key: string) => {\r\n                    const value = await db.getItem(key)\r\n                    if (value) {\r\n                        return value\r\n                    }\r\n                    return initialState\r\n                },\r\n                setItem: (k: string, v: any) => {\r\n                    if (v === EMPTY) return\r\n                    // eslint-disable-next-line consistent-return\r\n                    return db.setItem(k, v)\r\n                },\r\n                removeItem: db.removeItem,\r\n                delayInit: true,\r\n            }\r\n        }\r\n        return noopStorage\r\n    }\r\n\r\n    const listsStorageAtom = atomWithStorage<ListsState | typeof EMPTY>(\r\n        'lists',\r\n        EMPTY,\r\n        // @ts-ignore\r\n        IndexedDBStorage('lists'),\r\n    )\r\n\r\n    const defaultStateAtom = atom(\r\n        (get) => {\r\n            const got = get(listsStorageAtom)\r\n            if (got === EMPTY) {\r\n                return initialState\r\n            }\r\n            return got\r\n        },\r\n        (get, set, action) => {\r\n            set(listsStorageAtom, reducer(get(defaultStateAtom), action))\r\n        },\r\n    )\r\n\r\n    const isReadyAtom = atom((get) => get(listsStorageAtom) !== EMPTY)\r\n\r\n    function useListState() {\r\n        return useAtom(defaultStateAtom)\r\n    }\r\n\r\n    function useListStateReady() {\r\n        return useAtomValue(isReadyAtom)\r\n    }\r\n\r\n    return {\r\n        listsAtom: defaultStateAtom,\r\n        useListStateReady,\r\n        useListState,\r\n    }\r\n}\r\n\r\n\r\nexport const createTokenListReducer = (\r\n    initialState: ListsState,\r\n    DEFAULT_LIST_OF_LISTS: string[],\r\n    DEFAULT_ACTIVE_LIST_URLS: string[],\r\n) =>\r\n    createReducer(initialState, (builder) =>\r\n        builder\r\n            .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n                const current = state.byUrl[url]?.current ?? null\r\n                const pendingUpdate = state.byUrl[url]?.pendingUpdate ?? null\r\n\r\n                state.byUrl[url] = {\r\n                    current,\r\n                    pendingUpdate,\r\n                    loadingRequestId: requestId,\r\n                    error: null,\r\n                }\r\n            })\r\n            .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n                const current = state.byUrl[url]?.current\r\n                const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n                // no-op if update does nothing\r\n                if (current) {\r\n                    const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n                    if (upgradeType === VersionUpgrade.NONE) return\r\n                    if (loadingRequestId === null || loadingRequestId === requestId) {\r\n                        state.byUrl[url] = {\r\n                            ...state.byUrl[url],\r\n                            loadingRequestId: null,\r\n                            error: null,\r\n                            current,\r\n                            pendingUpdate: tokenList,\r\n                        }\r\n                    }\r\n                } else {\r\n                    // activate if on default active\r\n                    if (DEFAULT_ACTIVE_LIST_URLS.includes(url) && state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n                        state.activeListUrls.push(url)\r\n                    }\r\n\r\n                    state.byUrl[url] = {\r\n                        ...state.byUrl[url],\r\n                        loadingRequestId: null,\r\n                        error: null,\r\n                        current: tokenList,\r\n                        pendingUpdate: null,\r\n                    }\r\n                }\r\n            })\r\n            .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n                if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n                    // no-op since it's not the latest request\r\n                    return\r\n                }\r\n\r\n                state.byUrl[url] = {\r\n                    ...state.byUrl[url],\r\n                    loadingRequestId: null,\r\n                    error: errorMessage,\r\n                    current: null,\r\n                    pendingUpdate: null,\r\n                }\r\n            })\r\n            .addCase(addList, (state, { payload: url }) => {\r\n                if (!state.byUrl[url]) {\r\n                    state.byUrl[url] = NEW_LIST_STATE\r\n                }\r\n            })\r\n            .addCase(removeList, (state, { payload: url }) => {\r\n                if (state.byUrl[url]) {\r\n                    delete state.byUrl[url]\r\n                }\r\n                // remove list from active urls if needed\r\n                if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n                    state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n                }\r\n            })\r\n            .addCase(enableList, (state, { payload: url }) => {\r\n                if (!state.byUrl[url]) {\r\n                    state.byUrl[url] = NEW_LIST_STATE\r\n                }\r\n\r\n                if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n                    state.activeListUrls.push(url)\r\n                }\r\n\r\n                if (!state.activeListUrls) {\r\n                    state.activeListUrls = [url]\r\n                }\r\n            })\r\n            .addCase(disableList, (state, { payload: url }) => {\r\n                if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n                    state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n                }\r\n            })\r\n            .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n                if (!state.byUrl[url]?.pendingUpdate) {\r\n                    throw new Error('accept list update called without pending update')\r\n                }\r\n                state.byUrl[url] = {\r\n                    ...state.byUrl[url],\r\n                    pendingUpdate: null,\r\n                    current: state.byUrl[url].pendingUpdate,\r\n                }\r\n            })\r\n            .addCase(updateListVersion, (state) => {\r\n                // state loaded from localStorage, but new lists have never been initialized\r\n                if (!state.lastInitializedDefaultListOfLists) {\r\n                    state.byUrl = initialState.byUrl\r\n                    state.activeListUrls = initialState.activeListUrls\r\n                } else if (state.lastInitializedDefaultListOfLists) {\r\n                    const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n                        (s, l) => s.add(l),\r\n                        new Set(),\r\n                    )\r\n                    const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n                    DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n                        if (!lastInitializedSet.has(listUrl)) {\r\n                            state.byUrl[listUrl] = NEW_LIST_STATE\r\n                        }\r\n                    })\r\n\r\n                    state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n                        if (!newListOfListsSet.has(listUrl)) {\r\n                            delete state.byUrl[listUrl]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n                // if no active lists, activate defaults\r\n                if (!state.activeListUrls) {\r\n                    state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n                    // for each list on default list, initialize if needed\r\n                    DEFAULT_ACTIVE_LIST_URLS.forEach((listUrl: string) => {\r\n                        if (!state.byUrl[listUrl]) {\r\n                            state.byUrl[listUrl] = NEW_LIST_STATE\r\n                        }\r\n                        return true\r\n                    })\r\n                }\r\n            }),\r\n    )\r\n","import { createListsAtom, createTokenListReducer, NEW_LIST_STATE } from './reducer'\r\nimport { DEFAULT_ACTIVE_LIST_URLS, DEFAULT_LIST_OF_LISTS, UNSUPPORTED_LIST_URLS } from 'src/config/constants/lists'\r\n\r\nexport const initialState = {\r\n    lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n    byUrl: {\r\n        ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce((memo, listUrl) => {\r\n            memo[listUrl] = NEW_LIST_STATE\r\n            return memo\r\n        }, {}),\r\n    },\r\n    activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nconst listReducer = createTokenListReducer(initialState, DEFAULT_LIST_OF_LISTS, DEFAULT_ACTIVE_LIST_URLS)\r\n\r\nexport const { listsAtom, useListState, useListStateReady } = createListsAtom('listv3', listReducer, initialState)","import { ChainId } from 'src/config/constants/chains'\r\nimport { TokenList, TokenInfo } from 'src/utils/token'\r\nimport { WrappedTokenInfo, TokenAddressMap as TTokenAddressMap } from 'src/utils/wrappedTokenInfo'\r\nimport { ListsState } from './reducer'\r\nimport {\r\n    DEFAULT_LIST_OF_LISTS,\r\n    OFFICIAL_LISTS,\r\n    UNSUPPORTED_LIST_URLS,\r\n    WARNING_LIST_URLS,\r\n    ETH_URLS\r\n} from 'src/config/constants/lists'\r\nimport { atom, useAtomValue } from 'jotai'\r\nimport mapValues from 'lodash/mapValues'\r\nimport groupBy from 'lodash/groupBy'\r\nimport keyBy from 'lodash/keyBy'\r\nimport _pickBy from 'lodash/pickBy'\r\nimport { EMPTY_LIST } from 'src/utils/token'\r\nimport uniqBy from 'lodash/uniqBy'\r\nimport { useMemo } from 'react'\r\nimport { useActiveChainId } from 'src/hooks/useActiveChainId'\r\nimport DEFAULT_TOKEN_LIST from 'src/config/constants/tokenLists/svc-default.tokenlist.json'\r\nimport UNSUPPORTED_TOKEN_LIST from 'src/config/constants/tokenLists/svc-unsupported.tokenlist.json'\r\nimport WARNING_TOKEN_LIST from 'src/config/constants/tokenLists/svc-warning.tokenlist.json'\r\nimport { listsAtom } from './lists'\r\n\r\n\r\ntype TokenAddressMap = TTokenAddressMap<ChainId>\r\n\r\n// use ordering of default list of lists to assign priority\r\nfunction sortByListPriority(urlA: string, urlB: string) {\r\n\r\n    const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\r\n    const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\r\n\r\n    // need reverse order to make sure mapping includes top priority last\r\n    if (first < second) return 1\r\n    if (first > second) return -1\r\n    return 0\r\n}\r\n\r\nfunction enumKeys<O extends object, K extends keyof O = keyof O>(obj: O): K[] {\r\n    return Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]\r\n}\r\n\r\n// -------------------------------------\r\n//   Selectors\r\n// -------------------------------------\r\nconst selectorActiveUrlsAtom = atom((get) => get(listsAtom)?.activeListUrls ?? [])\r\nexport const selectorByUrlsAtom = atom((get) => get(listsAtom)?.byUrl ?? {})\r\n\r\nconst activeListUrlsAtom = atom((get) => {\r\n    const urls = get(selectorActiveUrlsAtom)\r\n    return urls?.filter((url) => !UNSUPPORTED_LIST_URLS.includes(url))\r\n})\r\n\r\nconst combineTokenMapsWithDefault = (lists: ListsState['byUrl'], urls: string[]) => {\r\n    const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\r\n    //  if (!urls) return defaultTokenMap\r\n\r\n    return defaultTokenMap\r\n\r\n    //  return combineMaps(combineTokenMaps(lists, urls), defaultTokenMap)\r\n}\r\n\r\nconst combineTokenMaps = (lists: ListsState['byUrl'], urls: string[]) => {\r\n    if (!urls) return EMPTY_LIST\r\n    return (\r\n        urls\r\n            .slice()\r\n            // sort by priority so top priority goes last\r\n            .sort(sortByListPriority)\r\n            .reduce((allTokens, currentUrl) => {\r\n                const current = lists[currentUrl]?.current\r\n                if (!current) return allTokens\r\n                try {\r\n                    const newTokens = Object.assign(listToTokenMap(current))\r\n                    return combineMaps(allTokens, newTokens)\r\n                } catch (error) {\r\n                    console.error('Could not show token list due to error', error)\r\n                    return allTokens\r\n                }\r\n            }, EMPTY_LIST)\r\n    )\r\n}\r\n\r\nexport const combinedTokenMapFromActiveUrlsAtom = atom((get) => {\r\n    const [selectorByUrls, selectorActiveUrls] = [get(selectorByUrlsAtom), get(selectorActiveUrlsAtom)]\r\n    return combineTokenMapsWithDefault(selectorByUrls, selectorActiveUrls)\r\n})\r\n\r\nconst inactiveUrlAtom = atom((get) => {\r\n    const [lists, urls] = [get(selectorByUrlsAtom), get(selectorActiveUrlsAtom)]\r\n    return Object.keys(lists).filter((url) => !urls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\r\n})\r\n\r\nexport const combinedTokenMapFromInActiveUrlsAtom = atom((get) => {\r\n    const [lists, inactiveUrl] = [get(selectorByUrlsAtom), get(inactiveUrlAtom)]\r\n    return combineTokenMaps(lists, inactiveUrl)\r\n})\r\n\r\nexport const combinedTokenMapFromOfficialsUrlsAtom = atom((get) => {\r\n    const lists = get(selectorByUrlsAtom)\r\n    return combineTokenMapsWithDefault(lists, OFFICIAL_LISTS)\r\n})\r\n\r\nexport const tokenListFromOfficialsUrlsAtom = atom((get) => {\r\n    const lists: ListsState['byUrl'] = get(selectorByUrlsAtom)\r\n\r\n    const mergedTokenLists: TokenInfo[] = OFFICIAL_LISTS.reduce((acc, url) => {\r\n        if (lists?.[url]?.current?.tokens) {\r\n            acc.push(...lists?.[url]?.current.tokens)\r\n        }\r\n        return acc\r\n    }, [])\r\n\r\n    const mergedList =\r\n        mergedTokenLists.length > 0 ? [...DEFAULT_TOKEN_LIST.tokens, ...mergedTokenLists] : DEFAULT_TOKEN_LIST.tokens\r\n    return mapValues(\r\n        groupBy(\r\n            uniqBy(mergedList, (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`),\r\n            'chainId',\r\n        ),\r\n        (tokenInfos) => keyBy(tokenInfos, 'address'),\r\n    )\r\n})\r\n\r\nexport const combinedTokenMapFromUnsupportedUrlsAtom = atom((get) => {\r\n    const lists = get(selectorByUrlsAtom)\r\n    // get hard coded unsupported tokens\r\n    const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\r\n    // get any loaded unsupported tokens\r\n    const loadedUnsupportedListMap = combineTokenMaps(lists, UNSUPPORTED_LIST_URLS)\r\n\r\n    return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n})\r\n\r\nexport const combinedTokenMapFromWarningUrlsAtom = atom((get) => {\r\n    const lists = get(selectorByUrlsAtom)\r\n    // get hard coded unsupported tokens\r\n    const localUnsupportedListMap = listToTokenMap(WARNING_TOKEN_LIST)\r\n    // get any loaded unsupported tokens\r\n    const loadedUnsupportedListMap = combineTokenMaps(lists, WARNING_LIST_URLS)\r\n\r\n    return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n})\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n    typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n    const result = listCache?.get(list)\r\n    if (result) return result\r\n\r\n    const tokenMap: WrappedTokenInfo[] = uniqBy(\r\n        list.tokens,\r\n        (tokenInfo) => `${tokenInfo.chainId}#${tokenInfo.address}`,\r\n    ).map((tokenInfo) => new WrappedTokenInfo(tokenInfo))\r\n\r\n    const groupedTokenMap: { [chainId: string]: WrappedTokenInfo[] } = groupBy(tokenMap, 'chainId')\r\n\r\n    const tokenAddressMap = mapValues(groupedTokenMap, (tokenInfoList) =>\r\n        mapValues(keyBy(tokenInfoList, 'address'), (tokenInfo) => ({ token: tokenInfo, list })),\r\n    ) as TokenAddressMap\r\n\r\n    // add chain id item if not exist\r\n    enumKeys(ChainId).forEach((chainId) => {\r\n        if (!(ChainId[chainId] in tokenAddressMap)) {\r\n            Object.defineProperty(tokenAddressMap, ChainId[chainId], {\r\n                value: {},\r\n            })\r\n        }\r\n    })\r\n\r\n    listCache?.set(list, tokenAddressMap)\r\n    return tokenAddressMap\r\n}\r\n\r\n// -------------------------------------\r\n//   Hooks\r\n// -------------------------------------\r\nexport function useAllLists(): {\r\n    readonly [url: string]: {\r\n        readonly current: TokenList | null\r\n        readonly pendingUpdate: TokenList | null\r\n        readonly loadingRequestId: string | null\r\n        readonly error: string | null\r\n    }\r\n} {\r\n    const { chainId } = useActiveChainId()\r\n\r\n    const urls = useAtomValue(selectorByUrlsAtom)\r\n\r\n    return useMemo(\r\n        () =>\r\n            _pickBy(\r\n                urls,\r\n                (_, url) =>\r\n                    (chainId === ChainId.ETHEREUM && ETH_URLS.includes(url))\r\n            ),\r\n        [chainId, urls],\r\n    )\r\n}\r\n\r\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\r\n    return {\r\n        [ChainId.ETHEREUM]: { ...map1[ChainId.ETHEREUM], ...map2[ChainId.ETHEREUM] },\r\n        [ChainId.GOERLI]: { ...map1[ChainId.GOERLI], ...map2[ChainId.GOERLI] },\r\n        [ChainId.POLYGON]: { ...map1[ChainId.POLYGON], ...map2[ChainId.POLYGON] },\r\n        [ChainId.MUMBAI]: { ...map1[ChainId.MUMBAI], ...map2[ChainId.MUMBAI] },\r\n        [ChainId.SVC]: { ...map1[ChainId.SVC], ...map2[ChainId.SVC] }\r\n    }\r\n}\r\n\r\n// filter out unsupported lists\r\nexport function useActiveListUrls(): string[] | undefined {\r\n    const { chainId } = useActiveChainId()\r\n    const urls = useAtomValue(activeListUrlsAtom)\r\n\r\n    return useMemo(\r\n        () =>\r\n            urls.filter(\r\n                (url) =>\r\n                    (chainId === ChainId.ETHEREUM && ETH_URLS.includes(url))\r\n            ),\r\n        [urls, chainId],\r\n    )\r\n}\r\n\r\nexport function useInactiveListUrls() {\r\n    return useAtomValue(inactiveUrlAtom)\r\n}\r\n\r\n// get all the tokens from active lists, combine with local default tokens\r\nexport function useCombinedActiveList(): TokenAddressMap {\r\n    const activeTokens = useAtomValue(combinedTokenMapFromActiveUrlsAtom)\r\n    return activeTokens\r\n}\r\n\r\n// all tokens from inactive lists\r\nexport function useCombinedInactiveList(): TokenAddressMap {\r\n    return useAtomValue(combinedTokenMapFromInActiveUrlsAtom)\r\n}\r\n\r\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\r\nexport function useUnsupportedTokenList(): TokenAddressMap {\r\n    return useAtomValue(combinedTokenMapFromUnsupportedUrlsAtom)\r\n}\r\n\r\n// list of warning tokens on interface, used to show warnings and prevent adds\r\nexport function useWarningTokenList(): TokenAddressMap {\r\n    return useAtomValue(combinedTokenMapFromWarningUrlsAtom)\r\n}\r\n\r\nexport function useIsListActive(url: string): boolean {\r\n    const activeListUrls = useActiveListUrls()\r\n    return useMemo(() => Boolean(activeListUrls?.includes(url)), [activeListUrls, url])\r\n}\r\n","import { useMemo } from 'react'\r\nimport { Token } from 'src/utils/token'\r\nimport { createSelector } from '@reduxjs/toolkit'\r\nimport { deserializeToken } from 'src/utils/wrappedTokenInfo'\r\nimport { useSelector } from 'react-redux'\r\nimport { useActiveChainId } from 'src/hooks/useActiveChainId'\r\nimport { AppState } from '../../index'\r\n\r\nconst selectUserTokens = ({ user: { tokens } }: AppState) => tokens\r\n\r\nexport const userAddedTokenSelector = (chainId: number) =>\r\n    createSelector(selectUserTokens, (serializedTokensMap) =>\r\n        Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken),\r\n    )\r\n\r\nexport default function useUserAddedTokens(): Token[] {\r\n    const { chainId } = useActiveChainId()\r\n    return useSelector(useMemo(() => userAddedTokenSelector(chainId), [chainId]))\r\n}\r\n","import { ChainId } from 'src/config/constants/chains'\r\nimport { Native, NativeCurrency } from 'src/utils/token'\r\nimport { useMemo } from 'react'\r\nimport { useActiveChainId } from './useActiveChainId'\r\n\r\nexport default function useNativeCurrency(): NativeCurrency {\r\n    const { chainId } = useActiveChainId()\r\n    return useMemo(() => {\r\n        try {\r\n            return Native.onChain(chainId)\r\n        } catch (e) {\r\n            return Native.onChain(ChainId.MUMBAI)\r\n        }\r\n    }, [chainId])\r\n}\r\n","// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const GELATO_NATIVE = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee'\r\n\r\nexport const FAST_INTERVAL = 10000\r\nexport const SLOW_INTERVAL = 60000","export enum FetchStatus {\r\n    Idle = 'IDLE',\r\n    Fetching = 'FETCHING',\r\n    Fetched = 'FETCHED',\r\n    Failed = 'FAILED',\r\n}\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import { CallOverrides, Contract } from '@ethersproject/contracts'\r\nimport { provider } from './wagmi'\r\nimport { Interface, Fragment } from '@ethersproject/abi'\r\nimport { Provider } from '@ethersproject/providers'\r\nimport { ChainId } from 'src/config/constants/chains'\r\nimport multicallAbi from 'src/config/abi/multicall.json'\r\n\r\nexport const multicallAddresses = {\r\n    1: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n    4: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n    5: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n    137: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n    80001: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n}\r\n\r\nexport const getMulticallContract = (chainId: ChainId, provider: Provider) => {\r\n    if (multicallAddresses[chainId]) {\r\n        return new Contract(multicallAddresses[chainId], multicallAbi, provider)\r\n    }\r\n    return null\r\n}\r\n\r\nexport interface Call {\r\n    address: string // Address of the contract\r\n    name: string // Function name on the contract (example: balanceOf)\r\n    params?: any[] // Function params\r\n}\r\n\r\nexport interface MulticallOptions extends CallOverrides {\r\n    requireSuccess?: boolean\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\r\n */\r\ninterface MulticallV2Params {\r\n    abi: any[]\r\n    calls: Call[]\r\n    chainId?: ChainId\r\n    options?: MulticallOptions\r\n    provider?: Provider\r\n}\r\n\r\nexport interface CallV3 extends Call {\r\n    abi: any[]\r\n    allowFailure?: boolean\r\n}\r\n\r\ninterface MulticallV3Params {\r\n    calls: CallV3[]\r\n    chainId?: ChainId\r\n    allowFailure?: boolean\r\n    overrides?: CallOverrides\r\n}\r\n\r\nexport type MultiCallV2 = <T = any>(params: MulticallV2Params) => Promise<T>\r\nexport type MultiCall = <T = any>(abi: any[], calls: Call[], chainId?: ChainId) => Promise<T>\r\n\r\nexport function createMulticall<TProvider extends Provider>(\r\n    provider: ({ chainId }: { chainId?: number | undefined }) => TProvider,\r\n) {\r\n    const multicall: MultiCall = async (abi: any[], calls: Call[], chainId = ChainId.ETHEREUM) => {\r\n        const multi = getMulticallContract(chainId, provider({ chainId }))\r\n        if (!multi) throw new Error(`Multicall Provider missing for ${chainId}`)\r\n        const itf = new Interface(abi)\r\n\r\n        const calldata = calls.map((call) => ({\r\n            target: call.address.toLowerCase(),\r\n            callData: itf.encodeFunctionData(call.name, call.params),\r\n        }))\r\n        const { returnData } = await multi.callStatic.aggregate(calldata)\r\n\r\n        const res = returnData.map((call: any, i: number) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n        return res as any\r\n    }\r\n\r\n    const multicallv2: MultiCallV2 = async ({ abi, calls, chainId = ChainId.ETHEREUM, options, provider: _provider }) => {\r\n        const { requireSuccess = true, ...overrides } = options || {}\r\n        const multi = getMulticallContract(chainId, _provider || provider({ chainId }))\r\n        if (!multi) throw new Error(`Multicall Provider missing for ${chainId}`)\r\n        const itf = new Interface(abi)\r\n\r\n        const calldata = calls.map((call) => ({\r\n            target: call.address.toLowerCase(),\r\n            callData: itf.encodeFunctionData(call.name, call.params),\r\n        }))\r\n\r\n        const returnData = await multi.callStatic.tryAggregate(requireSuccess, calldata, overrides)\r\n        const res = returnData.map((call: any, i: number) => {\r\n            const [result, data] = call\r\n            return result && data !== '0x' ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n        })\r\n\r\n        return res as any\r\n    }\r\n\r\n    const multicallv3 = async ({ calls, chainId = ChainId.ETHEREUM, allowFailure, overrides }: MulticallV3Params) => {\r\n        const multi = getMulticallContract(chainId, provider({ chainId }))\r\n        if (!multi) throw new Error(`Multicall Provider missing for ${chainId}`)\r\n        const interfaceCache = new WeakMap()\r\n        const _calls = calls.map(({ abi, address, name, params, allowFailure: _allowFailure }) => {\r\n            let itf = interfaceCache.get(abi)\r\n            if (!itf) {\r\n                itf = new Interface(abi)\r\n                interfaceCache.set(abi, itf)\r\n            }\r\n            if (!itf.fragments.some((fragment: Fragment) => fragment.name === name))\r\n                console.error(`${name} missing on ${address}`)\r\n            const callData = itf.encodeFunctionData(name, params ?? [])\r\n            return {\r\n                target: address.toLowerCase(),\r\n                allowFailure: allowFailure || _allowFailure,\r\n                callData,\r\n            }\r\n        })\r\n\r\n        const result = await multi.callStatic.aggregate3(_calls, ...(overrides ? [overrides] : []))\r\n\r\n        return result.map((call: any, i: number) => {\r\n            const { returnData, success } = call\r\n            if (!success || returnData === '0x') return null\r\n            const { abi, name } = calls[i]\r\n            const itf = interfaceCache.get(abi)\r\n            const decoded = itf?.decodeFunctionResult(name, returnData)\r\n            return decoded\r\n        })\r\n    }\r\n\r\n    return {\r\n        multicall,\r\n        multicallv2,\r\n        multicallv3,\r\n    }\r\n}\r\n\r\n\r\nexport interface MulticallOptions extends CallOverrides {\r\n    requireSuccess?: boolean\r\n}\r\n\r\nconst { multicall, multicallv2, multicallv3 } = createMulticall(provider)\r\n\r\nexport default multicall\r\n\r\nexport { multicallv2, multicallv3 }","import { Currency, ERC20Token } from \"src/utils/token\"\r\nimport { ChainId } from \"src/config/constants/chains\"\r\nimport { useActiveChainId } from \"./useActiveChainId\"\r\nimport { useAtomValue } from \"jotai\"\r\nimport { useMemo } from \"react\"\r\nimport { isAddress } from \"src/utils\"\r\nimport { TokenAddressMap } from \"src/utils/wrappedTokenInfo\"\r\nimport { combinedTokenMapFromActiveUrlsAtom, combinedTokenMapFromOfficialsUrlsAtom, useUnsupportedTokenList, useWarningTokenList } from \"src/state/lists/hooks\"\r\nimport useUserAddedTokens from \"src/state/user/hooks/useUserAddedTokens\"\r\nimport useNativeCurrency from \"./useNativeCurrency\"\r\nimport { GELATO_NATIVE } from \"src/config/constants\"\r\nimport { erc20ABI } from \"wagmi\"\r\nimport { arrayify } from \"@ethersproject/bytes\"\r\nimport { parseBytes32String } from \"@ethersproject/strings\"\r\nimport useSWRImmutable from 'swr/immutable'\r\nimport { FetchStatus } from \"src/config/constants/types\"\r\nimport { ERC20_BYTES32_ABI } from \"src/config/abi/erc20\"\r\nimport multicall from \"src/utils/multiCall\"\r\n\r\n\r\nconst mapWithoutUrls = (tokenMap: TokenAddressMap<ChainId>, chainId: number) =>\r\n    Object.keys(tokenMap[chainId] || {}).reduce<{ [address: string]: ERC20Token }>((newMap, address) => {\r\n        const checksummedAddress = isAddress(address)\r\n\r\n        if (checksummedAddress && !newMap[checksummedAddress]) {\r\n            newMap[checksummedAddress] = tokenMap[chainId][address].token\r\n        }\r\n\r\n        return newMap\r\n    }, {})\r\n\r\n\r\nexport function useAllTokens(): { [address: string]: ERC20Token } {\r\n    const { chainId } = useActiveChainId()\r\n    const tokenMap = useAtomValue(combinedTokenMapFromActiveUrlsAtom)\r\n    const userAddedTokens = useUserAddedTokens()\r\n    return useMemo(() => {\r\n        return (\r\n\r\n            userAddedTokens\r\n                // reduce into all ALL_TOKENS filtered by the current chain\r\n                .reduce<{ [address: string]: ERC20Token }>(\r\n                    (tokenMap_, token) => {\r\n                        const checksummedAddress = isAddress(token.address)\r\n\r\n                        if (checksummedAddress) {\r\n                            tokenMap_[checksummedAddress] = token\r\n                        }\r\n\r\n                        return tokenMap_\r\n                    },\r\n                    // must make a copy because reduce modifies the map, and we do not\r\n                    // want to make a copy in every iteration\r\n                    mapWithoutUrls(tokenMap, chainId),\r\n                )\r\n        )\r\n    }, [userAddedTokens, tokenMap, chainId])\r\n}\r\n\r\n\r\nexport function useOfficialsAndUserAddedTokens(): { [address: string]: ERC20Token } {\r\n    const { chainId } = useActiveChainId()\r\n    const tokenMap = useAtomValue(combinedTokenMapFromOfficialsUrlsAtom)\r\n\r\n    const userAddedTokens = useUserAddedTokens()\r\n    return useMemo(() => {\r\n        return (\r\n            userAddedTokens\r\n                // reduce into all ALL_TOKENS filtered by the current chain\r\n                .reduce<{ [address: string]: ERC20Token }>(\r\n                    (tokenMap_, token) => {\r\n                        const checksummedAddress = isAddress(token.address)\r\n\r\n                        if (checksummedAddress) {\r\n                            tokenMap_[checksummedAddress] = token\r\n                        }\r\n\r\n                        return tokenMap_\r\n                    },\r\n                    // must make a copy because reduce modifies the map, and we do not\r\n                    // want to make a copy in every iteration\r\n                    mapWithoutUrls(tokenMap, chainId),\r\n                )\r\n        )\r\n    }, [userAddedTokens, tokenMap, chainId])\r\n}\r\n\r\nexport function useUnsupportedTokens(): { [address: string]: ERC20Token } {\r\n    const { chainId } = useActiveChainId()\r\n    const unsupportedTokensMap = useUnsupportedTokenList()\r\n    return useMemo(() => mapWithoutUrls(unsupportedTokensMap, chainId), [unsupportedTokensMap, chainId])\r\n}\r\n\r\nexport function useWarningTokens(): { [address: string]: ERC20Token } {\r\n    const warningTokensMap = useWarningTokenList()\r\n    const { chainId } = useActiveChainId()\r\n    return useMemo(() => mapWithoutUrls(warningTokensMap, chainId), [warningTokensMap, chainId])\r\n}\r\n\r\nexport function useIsTokenActive(token: ERC20Token | undefined | null): boolean {\r\n    const activeTokens = useAllTokens()\r\n\r\n    if (!activeTokens || !token) {\r\n        return false\r\n    }\r\n\r\n    const tokenAddress = isAddress(token.address)\r\n\r\n    return tokenAddress && !!activeTokens[tokenAddress]\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n    const userAddedTokens = useUserAddedTokens()\r\n\r\n    if (!currency) {\r\n        return false\r\n    }\r\n\r\n    return !!userAddedTokens.find((token) => currency?.equals(token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n    return str && str.length > 0\r\n        ? str\r\n        : // need to check for proper bytes string and valid terminator\r\n        bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n            ? parseBytes32String(bytes32)\r\n            : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): ERC20Token | undefined | null {\r\n    const { chainId } = useActiveChainId()\r\n    const tokens = useAllTokens()\r\n\r\n    const address = isAddress(tokenAddress)\r\n\r\n    const token: ERC20Token | undefined = address ? tokens[address] : undefined\r\n\r\n    const { data, error } = useSWRImmutable(\r\n        !token && chainId && address && ['fetchTokenInfo', chainId, address],\r\n        async () => {\r\n            const calls = ['name', 'symbol', 'decimals'].map((method) => {\r\n                return { address: address.toString(), name: method }\r\n            })\r\n\r\n            return multicall(erc20ABI, calls, chainId)\r\n        },\r\n    )\r\n\r\n    const tokenName = data?.[0]?.[0]\r\n    const symbol = data?.[1]?.[0]\r\n    const decimals = data?.[2]?.[0]\r\n\r\n    const { data: dataBytes, error: statusBytes } = useSWRImmutable(\r\n        !token &&\r\n        chainId &&\r\n        address &&\r\n        (status === FetchStatus.Fetched || status === FetchStatus.Failed) &&\r\n        (!tokenName || !symbol) && ['fetchTokenInfo32', chainId, address],\r\n        async () => {\r\n            const calls = ['name', 'symbol'].map((method) => {\r\n                return { address: address.toString(), name: method }\r\n            })\r\n\r\n            return multicall(ERC20_BYTES32_ABI, calls, chainId)\r\n        },\r\n    )\r\n\r\n    const tokenNameBytes32 = dataBytes?.[0]?.[0]\r\n    const symbolBytes32 = dataBytes?.[1]?.[0]\r\n\r\n    return useMemo(() => {\r\n        if (token) return token\r\n        if (!chainId || !address) return undefined\r\n        if (status !== FetchStatus.Fetched && statusBytes !== FetchStatus.Fetched) return null\r\n        if (Number.isInteger(decimals)) {\r\n            return new ERC20Token(\r\n                chainId,\r\n                address,\r\n                decimals,\r\n                parseStringOrBytes32(symbol, symbolBytes32, 'UNKNOWN'),\r\n                parseStringOrBytes32(tokenName, tokenNameBytes32, 'Unknown Token'),\r\n            )\r\n        }\r\n        return undefined\r\n    }, [address, chainId, status, statusBytes, decimals, symbol, symbolBytes32, token, tokenName, tokenNameBytes32])\r\n}\r\nexport function useCurrency(currencyId: string | undefined): Currency | ERC20Token | null | undefined {\r\n    const native = useNativeCurrency()\r\n    const isNative =\r\n        currencyId?.toUpperCase() === native.symbol?.toUpperCase() || currencyId?.toLowerCase() === GELATO_NATIVE\r\n    const token = useToken(isNative ? undefined : currencyId)\r\n    return isNative ? native : token\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { SerializedWrappedToken } from 'src/utils/wrappedTokenInfo'\r\n\r\nexport interface SerializedPair {\r\n    token0: SerializedWrappedToken\r\n    token1: SerializedWrappedToken\r\n}\r\n\r\nexport enum FarmStakedOnly {\r\n    ON_FINISHED = 'onFinished',\r\n    TRUE = 'true',\r\n    FALSE = 'false',\r\n}\r\n\r\nexport enum ViewMode {\r\n    TABLE = 'TABLE',\r\n    CARD = 'CARD',\r\n}\r\n\r\nexport enum ChartViewMode {\r\n    BASIC = 'BASIC',\r\n    TRADING_VIEW = 'TRADING_VIEW',\r\n}\r\n\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n    'user/updateUserSlippageTolerance',\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedWrappedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n    'user/removeSerializedPair',\r\n)\r\n\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\r\n    'user/updateUserFarmStakedOnly',\r\n)\r\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\r\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\r\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\r\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\r\n    'user/updateUserPredictionAcceptedRisk',\r\n)\r\nexport const updateUserLimitOrderAcceptedWarning = createAction<{ userAcceptedRisk: boolean }>(\r\n    'user/userLimitOrderAcceptedWarning',\r\n)\r\n\r\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\r\n    'user/updateUserPredictionChartDisclaimerShow',\r\n)\r\nexport const updateUserPredictionChainlinkChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\r\n    'user/updateUserPredictionChainlinkChartDisclaimerShow',\r\n)\r\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\r\n    'user/updateUserExpertModeAcknowledgementShow',\r\n)\r\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\r\n    'user/updateUserUsernameVisibility',\r\n)\r\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\r\n\r\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\r\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\r\n\r\nexport const hidePhishingWarningBanner = createAction<void>('user/hidePhishingWarningBanner')\r\n\r\nexport const setIsExchangeChartDisplayed = createAction<boolean>('user/toggleIsExchangeChartDisplayed')\r\nexport const setChartViewMode = createAction<ChartViewMode>('user/setChartViewMode')\r\nexport const setZapDisabled = createAction<boolean>('user/setZapDisabled')\r\nexport const setSubgraphHealthIndicatorDisplayed = createAction<boolean>('user/setSubgraphHealthIndicatorDisplayed')\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport interface SerializableTransactionReceipt {\r\n    to: string;\r\n    from: string;\r\n    contractAddress: string;\r\n    transactionIndex: number;\r\n    blockHash: string;\r\n    transactionHash: string;\r\n    blockNumber: number;\r\n    status?: number;\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n    chainId: number;\r\n    hash: string;\r\n    from: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    summary?: string;\r\n}>('transactions/addTransaction');\r\n\r\nexport const clearAllTransactions = createAction<{ chainId: number }>('transactions/clearAllTransactions');\r\n\r\nexport const finalizeTransaction = createAction<{\r\n    chainId: number;\r\n    hash: string;\r\n    receipt: SerializableTransactionReceipt;\r\n}>('transactions/finalizeTransaction');\r\n\r\nexport const checkedTransaction = createAction<{\r\n    chainId: number;\r\n    hash: string;\r\n    blockNumber: number;\r\n}>('transactions/checkedTransaction');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addTransaction,\r\n    checkedTransaction,\r\n    clearAllTransactions,\r\n    finalizeTransaction,\r\n    SerializableTransactionReceipt,\r\n} from './actions';\r\n\r\nconst now = () => new Date().getTime();\r\n\r\nexport interface TransactionDetails {\r\n    hash: string;\r\n    approval?: { tokenAddress: string; spender: string };\r\n    summary?: string;\r\n    receipt?: SerializableTransactionReceipt;\r\n    lastCheckedBlockNumber?: number;\r\n    addedTime: number;\r\n    confirmedTime?: number;\r\n    from: string;\r\n}\r\n\r\nexport interface TransactionState {\r\n    [chainId: number]: {\r\n        [txHash: string]: TransactionDetails;\r\n    };\r\n}\r\n\r\nexport const initialState: TransactionState = {};\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n    builder\r\n        .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\r\n            if (transactions[chainId]?.[hash]) {\r\n                throw Error('Attempted to add existing transaction.');\r\n            }\r\n            const txs = transactions[chainId] ?? {};\r\n            txs[hash] = { hash, approval, summary, from, addedTime: now() };\r\n            transactions[chainId] = txs;\r\n        })\r\n        .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n            if (!transactions[chainId]) return;\r\n            transactions[chainId] = {};\r\n        })\r\n        .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n            const tx = transactions[chainId]?.[hash];\r\n            if (!tx) {\r\n                return;\r\n            }\r\n            if (!tx.lastCheckedBlockNumber) {\r\n                tx.lastCheckedBlockNumber = blockNumber;\r\n            } else {\r\n                tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\r\n            }\r\n        })\r\n        .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n            const tx = transactions[chainId]?.[hash];\r\n            if (!tx) {\r\n                return;\r\n            }\r\n            tx.receipt = receipt;\r\n            tx.confirmedTime = now();\r\n        }),\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n    Field,\r\n    replaceSwapState,\r\n    selectCurrency,\r\n    setRecipient,\r\n    switchCurrencies,\r\n    typeInput,\r\n    updateDerivedPairData,\r\n    updatePairData,\r\n} from './actions'\r\nimport { DerivedPairDataNormalized, PairDataNormalized } from './types'\r\n\r\nexport interface SwapState {\r\n    readonly independentField: Field\r\n    readonly typedValue: string\r\n    readonly [Field.INPUT]: {\r\n        readonly currencyId: string | undefined\r\n    }\r\n    readonly [Field.OUTPUT]: {\r\n        readonly currencyId: string | undefined\r\n    }\r\n    // the typed recipient address, or null if swap should go to sender\r\n    readonly recipient: string | null\r\n    readonly pairDataById: Record<number, Record<string, PairDataNormalized>> | null\r\n    readonly derivedPairDataById: Record<number, Record<string, DerivedPairDataNormalized>> | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n    independentField: Field.INPUT,\r\n    typedValue: '',\r\n    [Field.INPUT]: {\r\n        currencyId: 'matic',\r\n    },\r\n    [Field.OUTPUT]: {\r\n        currencyId: '0x8160510aAa29256E34d26D770171C05867d5252F',\r\n    },\r\n    pairDataById: {},\r\n    derivedPairDataById: {},\r\n    recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n    builder\r\n        .addCase(\r\n            replaceSwapState,\r\n            (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n                return {\r\n                    [Field.INPUT]: {\r\n                        currencyId: inputCurrencyId,\r\n                    },\r\n                    [Field.OUTPUT]: {\r\n                        currencyId: outputCurrencyId,\r\n                    },\r\n                    independentField: field,\r\n                    typedValue,\r\n                    recipient,\r\n                    pairDataById: state.pairDataById,\r\n                    derivedPairDataById: state.derivedPairDataById,\r\n                }\r\n            },\r\n        )\r\n        .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n            const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n            if (currencyId === state[otherField].currencyId) {\r\n                // the case where we have to swap the order\r\n                return {\r\n                    ...state,\r\n                    independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n                    [field]: { currencyId },\r\n                    [otherField]: { currencyId: state[field].currencyId },\r\n                }\r\n            }\r\n            // the normal case\r\n            return {\r\n                ...state,\r\n                [field]: { currencyId },\r\n            }\r\n        })\r\n        .addCase(switchCurrencies, (state) => {\r\n            return {\r\n                ...state,\r\n                independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n                [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n                [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n            }\r\n        })\r\n        .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n            return {\r\n                ...state,\r\n                independentField: field,\r\n                typedValue,\r\n            }\r\n        })\r\n        .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n            state.recipient = recipient\r\n        })\r\n        .addCase(updatePairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\r\n            if (!state.pairDataById[pairId]) {\r\n                state.pairDataById[pairId] = {}\r\n            }\r\n            state.pairDataById[pairId][timeWindow] = pairData\r\n        })\r\n        .addCase(updateDerivedPairData, (state, { payload: { pairData, pairId, timeWindow } }) => {\r\n            if (!state.derivedPairDataById[pairId]) {\r\n                state.derivedPairDataById[pairId] = {}\r\n            }\r\n            state.derivedPairDataById[pairId][timeWindow] = pairData\r\n        }),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from 'src/config/constants/chains';\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport const resetUserState = createAction<{ chainId: ChainId; newChainId?: ChainId }>('global/resetUserState')\r\n\r\nexport const toggleFarmTransactionModal = createAction<{\r\n    showModal: boolean\r\n}>('transactions/toggleFarmTransactionModal')\r\n\r\nexport const pickFarmTransactionTx = createAction<{\r\n    tx: string\r\n    chainId: ChainId\r\n}>('transactions/pickFarmTransactionTx')\r\n","import { parseUnits } from '@ethersproject/units'\r\n\r\nexport enum GAS_PRICE {\r\n    default = '5',\r\n    fast = '6',\r\n    instant = '7',\r\n    testnet = '10',\r\n}\r\n\r\nexport const GAS_PRICE_GWEI = {\r\n    rpcDefault: 'rpcDefault',\r\n    default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\r\n    fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\r\n    instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\r\n    testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { SerializedWrappedToken } from 'src/utils/wrappedTokenInfo'\r\nimport omitBy from 'lodash/omitBy'\r\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from 'src/config/constants/index'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n    addSerializedPair,\r\n    addSerializedToken,\r\n    addWatchlistPool,\r\n    addWatchlistToken,\r\n    FarmStakedOnly,\r\n    removeSerializedPair,\r\n    removeSerializedToken,\r\n    SerializedPair,\r\n    muteAudio,\r\n    unmuteAudio,\r\n    updateGasPrice,\r\n    updateUserDeadline,\r\n    updateUserExpertMode,\r\n    updateUserFarmStakedOnly,\r\n    updateUserFarmsViewMode,\r\n    updateUserPoolStakedOnly,\r\n    updateUserPoolsViewMode,\r\n    updateUserSingleHopOnly,\r\n    updateUserSlippageTolerance,\r\n    ViewMode,\r\n    updateUserPredictionAcceptedRisk,\r\n    updateUserPredictionChartDisclaimerShow,\r\n    updateUserPredictionChainlinkChartDisclaimerShow,\r\n    updateUserUsernameVisibility,\r\n    updateUserExpertModeAcknowledgementShow,\r\n    hidePhishingWarningBanner,\r\n    setIsExchangeChartDisplayed,\r\n    setChartViewMode,\r\n    ChartViewMode,\r\n    setSubgraphHealthIndicatorDisplayed,\r\n    updateUserLimitOrderAcceptedWarning,\r\n    setZapDisabled,\r\n} from './actions'\r\nimport { GAS_PRICE_GWEI } from '../types'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n    // the timestamp of the last updateVersion action\r\n    lastUpdateVersionTimestamp?: number\r\n\r\n    userExpertMode: boolean\r\n\r\n    // only allow swaps on direct pairs\r\n    userSingleHopOnly: boolean\r\n\r\n    // user defined slippage tolerance in bips, used in all txns\r\n    userSlippageTolerance: number\r\n\r\n    // deadline set by user in minutes, used in all txns\r\n    userDeadline: number\r\n\r\n    tokens: {\r\n        [chainId: number]: {\r\n            [address: string]: SerializedWrappedToken\r\n        }\r\n    }\r\n\r\n    pairs: {\r\n        [chainId: number]: {\r\n            // keyed by token0Address:token1Address\r\n            [key: string]: SerializedPair\r\n        }\r\n    }\r\n\r\n    audioPlay: boolean\r\n    isExchangeChartDisplayed: boolean\r\n    isSubgraphHealthIndicatorDisplayed: boolean\r\n    userChartViewMode: ChartViewMode\r\n    userFarmStakedOnly: FarmStakedOnly\r\n    userPoolStakedOnly: boolean\r\n    userPoolsViewMode: ViewMode\r\n    userFarmsViewMode: ViewMode\r\n    userPredictionAcceptedRisk: boolean\r\n    userLimitOrderAcceptedWarning: boolean\r\n    userPredictionChartDisclaimerShow: boolean\r\n    userPredictionChainlinkChartDisclaimerShow: boolean\r\n    userExpertModeAcknowledgementShow: boolean\r\n    userUsernameVisibility: boolean\r\n    userZapDisabled: boolean\r\n    gasPrice: string\r\n    watchlistTokens: string[]\r\n    watchlistPools: string[]\r\n    hideTimestampPhishingWarningBanner: number\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n    return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n    userExpertMode: false,\r\n    userSingleHopOnly: false,\r\n    userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n    userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n    tokens: {},\r\n    pairs: {},\r\n    audioPlay: true,\r\n    isExchangeChartDisplayed: true,\r\n    isSubgraphHealthIndicatorDisplayed: false,\r\n    userChartViewMode: ChartViewMode.BASIC,\r\n    userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\r\n    userPoolStakedOnly: false,\r\n    userPoolsViewMode: ViewMode.TABLE,\r\n    userFarmsViewMode: ViewMode.TABLE,\r\n    userPredictionAcceptedRisk: false,\r\n    userLimitOrderAcceptedWarning: false,\r\n    userPredictionChartDisclaimerShow: true,\r\n    userPredictionChainlinkChartDisclaimerShow: true,\r\n    userExpertModeAcknowledgementShow: true,\r\n    userUsernameVisibility: false,\r\n    userZapDisabled: false,\r\n    gasPrice: GAS_PRICE_GWEI.rpcDefault,\r\n    watchlistTokens: [],\r\n    watchlistPools: [],\r\n    hideTimestampPhishingWarningBanner: null,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n    builder\r\n        .addCase(updateVersion, (state) => {\r\n            // slippage is'nt being tracked in local storage, reset to default\r\n            // noinspection SuspiciousTypeOfGuard\r\n            if (typeof state.userSlippageTolerance !== 'number') {\r\n                state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n            }\r\n\r\n            // deadline isnt being tracked in local storage, reset to default\r\n            // noinspection SuspiciousTypeOfGuard\r\n            if (typeof state.userDeadline !== 'number') {\r\n                state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n            }\r\n\r\n            state.lastUpdateVersionTimestamp = currentTimestamp()\r\n        })\r\n        .addCase(updateUserExpertMode, (state, action) => {\r\n            state.userExpertMode = action.payload.userExpertMode\r\n        })\r\n        .addCase(updateUserSlippageTolerance, (state, action) => {\r\n            state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n        })\r\n        .addCase(updateUserDeadline, (state, action) => {\r\n            state.userDeadline = action.payload.userDeadline\r\n        })\r\n        .addCase(updateUserSingleHopOnly, (state, action) => {\r\n            state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n        })\r\n        .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n            if (!state.tokens) {\r\n                state.tokens = {}\r\n            }\r\n            state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n            state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n        })\r\n        .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n            if (!state.tokens) {\r\n                state.tokens = {}\r\n            }\r\n            if (state.tokens[chainId]) {\r\n                state.tokens[chainId] = omitBy(state.tokens[chainId], (value, key) => key === address)\r\n            } else {\r\n                state.tokens[chainId] = {}\r\n            }\r\n        })\r\n        .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n            if (\r\n                serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n                serializedPair.token0.address !== serializedPair.token1.address\r\n            ) {\r\n                const { chainId } = serializedPair.token0\r\n                state.pairs[chainId] = state.pairs[chainId] || {}\r\n                state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n            }\r\n        })\r\n        .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n            if (state.pairs[chainId]) {\r\n                const tokenAToB = pairKey(tokenAAddress, tokenBAddress)\r\n                const tokenBToA = pairKey(tokenBAddress, tokenAAddress)\r\n                // just delete both keys if either exists\r\n                state.pairs[chainId] = omitBy(state.pairs[chainId], (value, key) => key === tokenAToB || key === tokenBToA)\r\n            }\r\n        })\r\n        .addCase(muteAudio, (state) => {\r\n            state.audioPlay = false\r\n        })\r\n        .addCase(unmuteAudio, (state) => {\r\n            state.audioPlay = true\r\n        })\r\n        .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\r\n            state.userFarmStakedOnly = userFarmStakedOnly\r\n        })\r\n        .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\r\n            state.userPoolStakedOnly = userPoolStakedOnly\r\n        })\r\n        .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\r\n            state.userPoolsViewMode = userPoolsViewMode\r\n        })\r\n        .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\r\n            state.userFarmsViewMode = userFarmsViewMode\r\n        })\r\n        .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\r\n            state.userPredictionAcceptedRisk = userAcceptedRisk\r\n        })\r\n        .addCase(updateUserLimitOrderAcceptedWarning, (state, { payload: { userAcceptedRisk } }) => {\r\n            state.userLimitOrderAcceptedWarning = userAcceptedRisk\r\n        })\r\n        .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\r\n            state.userPredictionChartDisclaimerShow = userShowDisclaimer\r\n        })\r\n        .addCase(updateUserPredictionChainlinkChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\r\n            state.userPredictionChainlinkChartDisclaimerShow = userShowDisclaimer\r\n        })\r\n        .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\r\n            state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\r\n        })\r\n        .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\r\n            state.userUsernameVisibility = userUsernameVisibility\r\n        })\r\n        .addCase(updateGasPrice, (state, action) => {\r\n            state.gasPrice = action.payload.gasPrice\r\n        })\r\n        .addCase(addWatchlistToken, (state, { payload: { address } }) => {\r\n            // state.watchlistTokens can be undefined for pre-loaded localstorage user state\r\n            const tokenWatchlist = state.watchlistTokens ?? []\r\n            if (!tokenWatchlist.includes(address)) {\r\n                state.watchlistTokens = [...tokenWatchlist, address]\r\n            } else {\r\n                // Remove token from watchlist\r\n                const newTokens = state.watchlistTokens.filter((x) => x !== address)\r\n                state.watchlistTokens = newTokens\r\n            }\r\n        })\r\n        .addCase(addWatchlistPool, (state, { payload: { address } }) => {\r\n            // state.watchlistPools can be undefined for pre-loaded localstorage user state\r\n            const poolsWatchlist = state.watchlistPools ?? []\r\n            if (!poolsWatchlist.includes(address)) {\r\n                state.watchlistPools = [...poolsWatchlist, address]\r\n            } else {\r\n                // Remove pool from watchlist\r\n                const newPools = state.watchlistPools.filter((x) => x !== address)\r\n                state.watchlistPools = newPools\r\n            }\r\n        })\r\n        .addCase(hidePhishingWarningBanner, (state) => {\r\n            state.hideTimestampPhishingWarningBanner = currentTimestamp()\r\n        })\r\n        .addCase(setIsExchangeChartDisplayed, (state, { payload }) => {\r\n            state.isExchangeChartDisplayed = payload\r\n        })\r\n        .addCase(setChartViewMode, (state, { payload }) => {\r\n            state.userChartViewMode = payload\r\n        })\r\n        .addCase(setZapDisabled, (state, { payload }) => {\r\n            state.userZapDisabled = payload\r\n        })\r\n        .addCase(setSubgraphHealthIndicatorDisplayed, (state, { payload }) => {\r\n            state.isSubgraphHealthIndicatorDisplayed = payload\r\n        }),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { ChainId } from 'src/config/constants/chains'\r\nimport { toggleFarmTransactionModal, pickFarmTransactionTx } from './actions'\r\n\r\nexport interface GlobalState {\r\n    showFarmTransactionModal: boolean\r\n    pickedFarmTransactionModalTx: {\r\n        tx: string\r\n        chainId: ChainId\r\n    }\r\n}\r\n\r\nexport const initialState: GlobalState = {\r\n    showFarmTransactionModal: false,\r\n    pickedFarmTransactionModalTx: {\r\n        tx: '',\r\n        chainId: ChainId.ETHEREUM,\r\n    },\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n    builder\r\n        .addCase(toggleFarmTransactionModal, (state, { payload: { showModal } }) => {\r\n            state.showFarmTransactionModal = showModal\r\n        })\r\n        .addCase(pickFarmTransactionTx, (state, { payload: { tx, chainId } }) => {\r\n            state.pickedFarmTransactionModalTx = { tx, chainId }\r\n            state.showFarmTransactionModal = true\r\n        }),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n    address: string\r\n    callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n    if (!ADDRESS_REGEX.test(call.address)) {\r\n        throw new Error(`Invalid address: ${call.address}`)\r\n    }\r\n    if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n        throw new Error(`Invalid hex: ${call.callData}`)\r\n    }\r\n    return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n    const pcs = callKey.split('-')\r\n    if (pcs.length !== 2) {\r\n        throw new Error(`Invalid call key: ${callKey}`)\r\n    }\r\n    return {\r\n        address: pcs[0],\r\n        callData: pcs[1],\r\n    }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n    // how often this data should be fetched, by default 1\r\n    readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n    'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n    'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n    'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n    chainId: number\r\n    calls: Call[]\r\n    fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n    chainId: number\r\n    blockNumber: number\r\n    results: {\r\n        [callKey: string]: string | null\r\n    }\r\n}>('multicall/updateMulticallResults')\r\n","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist'\r\nimport { useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport user from './user/reducer'\r\nimport global from './global/reducer'\r\nimport multicall from './multicall/reducer'\r\n\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\r\n\r\nconst persistConfig = {\r\n    key: 'primary',\r\n    whitelist: PERSISTED_KEYS,\r\n    blacklist: ['profile'],\r\n    storage,\r\n    version: 1,\r\n}\r\n\r\nconst persistedReducer = persistReducer(\r\n    persistConfig,\r\n    combineReducers({\r\n        transactions,\r\n        swap,\r\n        user,\r\n        global,\r\n        multicall\r\n    }),\r\n)\r\n\r\nlet store: ReturnType<typeof makeStore>\r\n\r\nexport function makeStore(preloadedState = undefined) {\r\n    return configureStore({\r\n        reducer: persistedReducer,\r\n        middleware: (getDefaultMiddleware) =>\r\n            getDefaultMiddleware({\r\n                thunk: true,\r\n                serializableCheck: {\r\n                    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n                },\r\n            }),\r\n        devTools: process.env.NODE_ENV === 'development',\r\n        preloadedState,\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const initializeStore = (preloadedState = undefined) => {\r\n    let _store = store ?? makeStore(preloadedState)\r\n\r\n    // After navigating to a page with an initial Redux state, merge that state\r\n    // with the current state in the store, and create a new store\r\n    if (preloadedState && store) {\r\n        _store = makeStore({\r\n            ...store.getState(),\r\n            ...preloadedState,\r\n        })\r\n        // Reset the current store\r\n        store = undefined\r\n    }\r\n\r\n    // For SSG and SSR always create a new store\r\n    if (typeof window === 'undefined') return _store\r\n\r\n    // Create the store once in the client\r\n    if (!store) {\r\n        store = _store\r\n    }\r\n\r\n    return _store\r\n}\r\n\r\nstore = initializeStore()\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n\r\n\r\n\r\nexport function useStore(initialState) {\r\n    return useMemo(() => initializeStore(initialState), [initialState])\r\n}\r\n\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n    addMulticallListeners,\r\n    errorFetchingMulticallResults,\r\n    fetchingMulticallResults,\r\n    removeMulticallListeners,\r\n    toCallKey,\r\n    updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n    callListeners?: {\r\n        // on a per-chain basis\r\n        [chainId: number]: {\r\n            // stores for each call key the listeners' preferences\r\n            [callKey: string]: {\r\n                // stores how many listeners there are per each blocks per fetch preference\r\n                [blocksPerFetch: number]: number\r\n            }\r\n        }\r\n    }\r\n\r\n    callResults: {\r\n        [chainId: number]: {\r\n            [callKey: string]: {\r\n                data?: string | null\r\n                blockNumber?: number\r\n                fetchingBlockNumber?: number\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n    callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n    builder\r\n        .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n            const listeners: MulticallState['callListeners'] = state.callListeners\r\n                ? state.callListeners\r\n                : (state.callListeners = {})\r\n            listeners[chainId] = listeners[chainId] ?? {}\r\n            calls.forEach((call) => {\r\n                const callKey = toCallKey(call)\r\n                listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n                listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n            })\r\n        })\r\n        .addCase(\r\n            removeMulticallListeners,\r\n            (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n                const listeners: MulticallState['callListeners'] = state.callListeners\r\n                    ? state.callListeners\r\n                    : (state.callListeners = {})\r\n\r\n                if (!listeners[chainId]) return\r\n                calls.forEach((call) => {\r\n                    const callKey = toCallKey(call)\r\n                    if (!listeners[chainId][callKey]) return\r\n                    if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n                    if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n                        delete listeners[chainId][callKey][blocksPerFetch]\r\n                    } else {\r\n                        listeners[chainId][callKey][blocksPerFetch]--\r\n                    }\r\n                })\r\n            },\r\n        )\r\n        .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n            state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n            calls.forEach((call) => {\r\n                const callKey = toCallKey(call)\r\n                const current = state.callResults[chainId][callKey]\r\n                if (!current) {\r\n                    state.callResults[chainId][callKey] = {\r\n                        fetchingBlockNumber,\r\n                    }\r\n                } else {\r\n                    if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n                    state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n                }\r\n            })\r\n        })\r\n        .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n            state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n            calls.forEach((call) => {\r\n                const callKey = toCallKey(call)\r\n                const current = state.callResults[chainId][callKey]\r\n                if (!current) return // only should be dispatched if we are already fetching\r\n                if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n                    delete current.fetchingBlockNumber\r\n                    current.data = null\r\n                    current.blockNumber = fetchingBlockNumber\r\n                }\r\n            })\r\n        })\r\n        .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n            state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n            Object.keys(results).forEach((callKey) => {\r\n                const current = state.callResults[chainId][callKey]\r\n                if ((current?.blockNumber ?? 0) > blockNumber) return\r\n                state.callResults[chainId][callKey] = {\r\n                    data: results[callKey],\r\n                    blockNumber,\r\n                }\r\n            })\r\n        }),\r\n)\r\n","import { useCallback } from 'react'\r\nimport { Currency } from 'src/utils/token'\r\nimport { Field, selectCurrency, switchCurrencies, typeInput, setRecipient } from './actions'\r\nimport { useAppDispatch } from '../index'\r\n\r\nexport function useSwapActionHandlers(): {\r\n    onCurrencySelection: (field: Field, currency: Currency) => void\r\n    onSwitchTokens: () => void\r\n    onUserInput: (field: Field, typedValue: string) => void\r\n    onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const onSwitchTokens = useCallback(() => {\r\n        dispatch(switchCurrencies())\r\n    }, [dispatch])\r\n\r\n    const onCurrencySelection = useCallback(\r\n        (field: Field, currency: Currency) => {\r\n            dispatch(\r\n                selectCurrency({\r\n                    field,\r\n                    currencyId: currency?.isToken ? currency.address : currency?.isNative ? currency.symbol : '',\r\n                }),\r\n            )\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    const onUserInput = useCallback(\r\n        (field: Field, typedValue: string) => {\r\n            dispatch(typeInput({ field, typedValue }))\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    const onChangeRecipient = useCallback(\r\n        (recipient: string | null) => {\r\n            dispatch(setRecipient({ recipient }))\r\n        },\r\n        [dispatch],\r\n    )\r\n\r\n    return {\r\n        onSwitchTokens,\r\n        onCurrencySelection,\r\n        onUserInput,\r\n        onChangeRecipient,\r\n    }\r\n}\r\n","import React, { useCallback, useMemo, useRef, useState } from 'react'\r\n\r\nimport { Box, Modal, Tabs, Tab, Typography, OutlinedInput, InputAdornment } from '@mui/material'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport { useTranslation } from 'src/context/Localization'\r\nimport { useAllTokens } from 'src/hooks/Tokens'\r\nimport { isAddress } from '@ethersproject/address'\r\nimport { FixedSizeList } from 'react-window'\r\nimport useDebounce from 'src/hooks/useDebounce'\r\nimport { createFilterToken } from 'src/utils/filtering'\r\nimport { Currency, NATIVE, Token } from 'src/utils/token'\r\nimport { useActiveChainId } from 'src/hooks/useActiveChainId'\r\nimport { DEFAULT_CHAIN_ID } from 'src/config/constants/chains'\r\nimport useNativeCurrency from 'src/hooks/useNativeCurrency'\r\n\r\n\r\nconst modalStyle = {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '500px',\r\n    bgcolor: 'rgb(255, 231, 172)',\r\n    boxShadow: 24,\r\n    borderRadius: '20px',\r\n    '& .MuiTypography-root': {\r\n        color: '#333'\r\n    },\r\n    '& .subText': {\r\n        color: '#bbb'\r\n    }\r\n}\r\n\r\n\r\nfunction CurrencyRow({ token, onSelect }) {\r\n\r\n    return (\r\n\r\n        <Box\r\n            onClick={onSelect}\r\n            sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                p: 2,\r\n                cursor: 'pointer',\r\n                '&:hover': {\r\n                    bgcolor: '#eee'\r\n                }\r\n            }}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n                <img src={token.logoURI} style={{ width: '28px', height: '28px' }} />\r\n                <Box px={1}>\r\n                    <Typography sx={{ fontSize: '16px' }}>{token.symbol}</Typography>\r\n                    <Typography sx={{ fontSize: '12px' }}>{token.name}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box>\r\n                <Typography sx={{ fontSize: '20px', mr: 3 }}>0</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction TokenSelectModal({ open, onClose, onCurrencySelect }) {\r\n\r\n    const [value, setValue] = React.useState('one')\r\n\r\n    const allTokens = useAllTokens()\r\n    const nativeCurrency = useNativeCurrency()\r\n\r\n    const handleChange = (event: any, newValue: string) => {\r\n        setValue(newValue);\r\n    }\r\n\r\n    const { t } = useTranslation()\r\n\r\n    // refs for fixed size lists\r\n    const fixedList = useRef<FixedSizeList>()\r\n\r\n    const [searchQuery, setSearchQuery] = useState<string>('')\r\n    const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n    const handleInput = useCallback((event) => {\r\n        const input = event.target.value\r\n        const checksummedInput = isAddress(input)\r\n        setSearchQuery(checksummedInput || input)\r\n        fixedList.current?.scrollTo(0)\r\n    }, [])\r\n\r\n    const filteredTokens: Token[] = useMemo(() => {\r\n        const filterToken = createFilterToken(debouncedQuery)\r\n        return Object.values(allTokens).filter(filterToken)\r\n    }, [allTokens, debouncedQuery])\r\n\r\n    const handleCurrencySelect = useCallback(\r\n        (currency: Currency) => {\r\n            onCurrencySelect(currency)\r\n        }, [onCurrencySelect])\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            sx={{\r\n                \"& > .MuiBackdrop-root\": {\r\n                    backdropFilter: \"blur(10px)\"\r\n                }\r\n            }}\r\n        >\r\n            <Box sx={{ ...modalStyle }}>\r\n                <Box\r\n                    display='flex'\r\n                    justifyContent='space-between'\r\n                    alignItems='center'\r\n                    sx={{ mt: 4, mb: 1, px: 4 }}\r\n                >\r\n                    <Typography sx={{ fontSize: '20px' }}>{t('Select a token')}</Typography>\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        alignItem: 'center',\r\n                        justifyContent: 'center',\r\n                        bgcolor: '#fff',\r\n                        borderRadius: '9999px',\r\n                        p: 1\r\n                    }}>\r\n                        <CloseIcon\r\n                            sx={{ width: '20px', height: '20px', color: '#333', cursor: 'pointer' }}\r\n                            onClick={onClose}\r\n                        />\r\n                    </Box>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <OutlinedInput\r\n                        onChange={(e) => handleInput(e)}\r\n                        placeholder='Search by a name, symbol or address'\r\n                        startAdornment={<InputAdornment position='start'>\r\n                            <SearchIcon />\r\n                        </InputAdornment>}\r\n                        sx={{\r\n                            width: '90%',\r\n                            color: '#333',\r\n                            bgcolor: '#fff',\r\n                            borderRadius: '10px',\r\n                            '& fieldset': {\r\n                                borderColor: '#ffae5a !important'\r\n                            },\r\n                            '& input': {\r\n                                p: '10px 15px'\r\n                            }\r\n                        }}\r\n                    />\r\n                </Box>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                            '& .Mui-selected': {\r\n                                color: '#333 !important',\r\n                                bgcolor: '#fff',\r\n                                borderTopLeftRadius: '20px',\r\n                                borderTopRightRadius: '20px'\r\n                            },\r\n                            '& .MuiTabs-indicator': {\r\n                                background: 'none'\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Tab value=\"one\" label=\"Wallet Tokens\" disableRipple />\r\n                        <Tab value=\"two\" label=\"Polygon\" disableRipple />\r\n                        <Tab value=\"three\" label=\"Large Cap\" disableRipple />\r\n                        <Tab value=\"four\" label=\"Stable Coins\" disableRipple />\r\n                    </Tabs>\r\n                </Box>\r\n                <Box sx={{\r\n                    bgcolor: '#fff',\r\n                    height: '500px',\r\n                    borderBottomLeftRadius: '20px',\r\n                    borderBottomRightRadius: '20px'\r\n                }}>\r\n                    <CurrencyRow\r\n                        token={NATIVE[DEFAULT_CHAIN_ID]}\r\n                        onSelect={() => {\r\n                            handleCurrencySelect(nativeCurrency)\r\n                            onClose()\r\n                        }}\r\n                    />\r\n                    {\r\n                        filteredTokens.map((token, index) => (\r\n                            <CurrencyRow\r\n                                key={index}\r\n                                token={token}\r\n                                onSelect={() => {\r\n                                    handleCurrencySelect(token)\r\n                                    onClose()\r\n                                }}\r\n                            />\r\n                        ))\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TokenSelectModal\r\n","import { useEffect, useState } from 'react';\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n    useEffect(() => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nimport { Token, TokenInfo } from './token'\r\nimport { isAddress } from './index'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n    if (search.length === 0) return tokens\r\n\r\n    const searchingAddress = isAddress(search)\r\n\r\n    if (searchingAddress) {\r\n        return tokens.filter((token) => token.address === searchingAddress)\r\n    }\r\n\r\n    const lowerSearchParts = search\r\n        .toLowerCase()\r\n        .split(/\\s+/)\r\n        .filter((s) => s.length > 0)\r\n\r\n    if (lowerSearchParts.length === 0) {\r\n        return tokens\r\n    }\r\n\r\n    const matchesSearch = (s: string): boolean => {\r\n        const sParts = s\r\n            .toLowerCase()\r\n            .split(/\\s+/)\r\n            .filter((s_) => s_.length > 0)\r\n\r\n        return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n    }\r\n\r\n    return tokens.filter((token) => {\r\n        const { symbol, name } = token\r\n        return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n    })\r\n}\r\n\r\nexport function createFilterToken<T extends TokenInfo | Token>(search: string): (token: T) => boolean {\r\n    const searchingAddress = isAddress(search)\r\n\r\n    if (searchingAddress) {\r\n        const address = searchingAddress.toLowerCase()\r\n        return (t: T) => 'address' in t && address === t.address.toLowerCase()\r\n    }\r\n\r\n    const lowerSearchParts = search\r\n        .toLowerCase()\r\n        .split(/\\s+/)\r\n        .filter((s) => s.length > 0)\r\n\r\n    if (lowerSearchParts.length === 0) {\r\n        return () => true\r\n    }\r\n\r\n    const matchesSearch = (s: string): boolean => {\r\n        const sParts = s\r\n            .toLowerCase()\r\n            .split(/\\s+/)\r\n            .filter((s_) => s_.length > 0)\r\n\r\n        return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n    }\r\n    return (token) => {\r\n        const { symbol, name } = token\r\n        return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n    }\r\n}\r\n\r\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\r\n    return useMemo(() => {\r\n        if (!tokens) {\r\n            return []\r\n        }\r\n\r\n        const trimmedSearchQuery = searchQuery.toLowerCase().trim()\r\n\r\n        const symbolMatch = trimmedSearchQuery.split(/\\s+/).filter((s) => s.length > 0)\r\n\r\n        if (symbolMatch.length > 1) {\r\n            return tokens\r\n        }\r\n\r\n        const exactMatches: Token[] = []\r\n        const symbolSubstrings: Token[] = []\r\n        const rest: Token[] = []\r\n\r\n        // sort tokens by exact match -> substring on symbol match -> rest\r\n        tokens.forEach((token) => {\r\n            const tokenSymbol = token.symbol?.toLowerCase()\r\n            if (tokenSymbol === symbolMatch[0] || token.name?.toLowerCase() === trimmedSearchQuery) {\r\n                return exactMatches.push(token)\r\n            }\r\n            if (tokenSymbol.startsWith(trimmedSearchQuery)) {\r\n                return symbolSubstrings.push(token)\r\n            }\r\n            return rest.push(token)\r\n        })\r\n\r\n        return [...exactMatches, ...symbolSubstrings, ...rest]\r\n    }, [tokens, searchQuery])\r\n}\r\n","import { useWeb3React } from './useWeb3React'\r\n// import { useRouter } from 'next/router'\r\nimport { useLocation, useSearchParams } from 'react-router-dom'\r\nimport { useEffect, useRef } from 'react'\r\nimport { EXCHANGE_PAGE_PATHS } from 'src/config/constants/exchange'\r\nimport { isChainSupported } from 'src/utils/wagmi'\r\nimport { useProvider } from 'wagmi'\r\nimport { ChainId } from 'src/config/constants/chains'\r\nimport { getChainId, CHAIN_QUERY_NAME } from 'src/config/constants/chains'\r\nimport { useActiveChainId } from './useActiveChainId'\r\nimport { useSwitchNetworkLoading } from './useSwitchNetworkLoading'\r\n\r\n\r\n// const getHashFromRouter = (router) => {\r\n//     return router.match(/#([a-z0-9]+)/gi)\r\n// }\r\n\r\n// export function useNetworkConnectorUpdater() {\r\n//     const { chainId } = useActiveChainId()\r\n//     const previousChainIdRef = useRef(chainId)\r\n//     const [loading] = useSwitchNetworkLoading()\r\n//     const router = useLocation()\r\n//     const [params] = useSearchParams()\r\n\r\n//     useEffect(() => {\r\n//         const setPrevChainId = () => {\r\n//             previousChainIdRef.current = chainId\r\n//         }\r\n//         if (loading || !router.isReady) return setPrevChainId()\r\n//         const parsedQueryChainId = getChainId(params.get('chain') as string)\r\n\r\n//         if (!parsedQueryChainId && chainId === ChainId.ETHEREUM) return setPrevChainId()\r\n//         if (parsedQueryChainId !== chainId && isChainSupported(chainId)) {\r\n//             const removeQueriesFromPath =\r\n//                 previousChainIdRef.current !== chainId &&\r\n//                 EXCHANGE_PAGE_PATHS.some((item) => {\r\n//                     return router.pathname.startsWith(item)\r\n//                 })\r\n//             const uriHash = getHashFromRouter(router)?.[0]\r\n//             const { chainId: _chainId, ...omittedQuery } = router.query\r\n//             router.replace(\r\n//                 {\r\n//                     query: {\r\n//                         ...(!removeQueriesFromPath && omittedQuery),\r\n//                         chain: CHAIN_QUERY_NAME[chainId],\r\n//                     },\r\n//                     ...(uriHash && { hash: uriHash }),\r\n//                 },\r\n//                 undefined,\r\n//             )\r\n//         }\r\n//         return setPrevChainId()\r\n//     }, [chainId, loading, router])\r\n// }\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = () => {\r\n    const web3React = useWeb3React()\r\n    const { chainId, isWrongNetwork } = useActiveChainId()\r\n    const provider = useProvider({ chainId })\r\n\r\n    return {\r\n        provider,\r\n        ...web3React,\r\n        chainId,\r\n        isWrongNetwork,\r\n    }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import { useAccount, useNetwork, useProvider } from \"wagmi\"\r\n\r\nexport function useWeb3React() {\r\n    const { chain } = useNetwork()\r\n    const { address, connector, isConnected, isConnecting } = useAccount()\r\n    const provider = useProvider({ chainId: chain?.id })\r\n\r\n    return {\r\n        chainId: chain?.id,\r\n        account: isConnected ? address : null,\r\n        isConnected,\r\n        isConnecting,\r\n        chain,\r\n        connector,\r\n        provider\r\n    }\r\n}","import { useMemo } from 'react'\r\nimport { useAccount, useProvider, useSigner } from 'wagmi'\r\nimport { useActiveChainId } from './useActiveChainId'\r\n\r\nexport const useProviderOrSigner = (withSignerIfPossible = true) => {\r\n    const { chainId } = useActiveChainId()\r\n    const provider = useProvider({ chainId })\r\n    const { address, isConnected } = useAccount()\r\n    const { data: signer } = useSigner()\r\n\r\n    return useMemo(\r\n        () => (withSignerIfPossible && address && isConnected && signer ? signer : provider),\r\n        [address, isConnected, provider, signer, withSignerIfPossible],\r\n    )\r\n}\r\n","export default {\r\n    multiCall: {\r\n        1: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n        5: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n        137: '0xcA11bde05977b3631167028862bE2a173976CA11',\r\n        80001: '0xcA11bde05977b3631167028862bE2a173976CA11'\r\n    }\r\n}","import { ChainId } from 'src/config/constants/chains'\r\nimport addresses from 'src/config/constants/contracts'\r\n\r\nexport const getAddress = (address: any, chainId?: number): string => {\r\n    return address[chainId] ? address[chainId] : address[ChainId.MUMBAI]\r\n}\r\n\r\n\r\nexport const getMulticallAddress = (chainId?: number) => {\r\n    return getAddress(addresses.multiCall, chainId)\r\n}","import useActiveWeb3React from \"./useActiveWeb3React\"\r\nimport { useMemo } from 'react'\r\n\r\nimport {\r\n    Erc20,\r\n    Erc20Bytes32,\r\n    Multicall,\r\n    Weth,\r\n} from 'src/config/abi/types'\r\n\r\nimport { useProviderOrSigner } from './useProviderOrSigner'\r\nimport { getMulticallAddress } from 'src/utils/addressHelper'\r\nimport {\r\n    getErc20Contract,\r\n} from 'src/utils/contractHelper'\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { WNATIVE } from \"src/utils/token\"\r\nimport { ERC20_BYTES32_ABI } from 'src/config/abi/erc20'\r\nimport ERC20_ABI from 'src/config/abi/erc20.json'\r\nimport IPairABI from 'src/config/abi/IPair.json'\r\nimport multiCallAbi from 'src/config/abi/multicall.json'\r\nimport WETH_ABI from 'src/config/abi/weth.json'\r\nimport { getContract } from 'src/utils'\r\n\r\nimport { IPair } from 'src/config/abi/types'\r\nimport { useActiveChainId } from './useActiveChainId'\r\n\r\n\r\nexport const useERC20 = (address: string, withSignerIfPossible = true) => {\r\n    const providerOrSigner = useProviderOrSigner(withSignerIfPossible)\r\n    return useMemo(() => getErc20Contract(address, providerOrSigner), [address, providerOrSigner])\r\n}\r\n\r\n\r\n// Code below migrated from Exchange useContract.ts\r\n\r\n// returns null on errors\r\nexport function useContract<T extends Contract = Contract>(\r\n    address: string | undefined,\r\n    ABI: any,\r\n    withSignerIfPossible = true,\r\n): T | null {\r\n    const { provider } = useActiveWeb3React()\r\n\r\n    const providerOrSigner = useProviderOrSigner(withSignerIfPossible) ?? provider\r\n\r\n    const canReturnContract = useMemo(() => address && ABI && providerOrSigner, [address, ABI, providerOrSigner])\r\n\r\n    return useMemo(() => {\r\n        if (!canReturnContract) return null\r\n        try {\r\n            return getContract(address, ABI, providerOrSigner)\r\n        } catch (error) {\r\n            console.error('Failed to get contract', error)\r\n            return null\r\n        }\r\n    }, [address, ABI, providerOrSigner, canReturnContract]) as T\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean) {\r\n    return useContract<Erc20>(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWNativeContract(withSignerIfPossible?: boolean): Contract | null {\r\n    const { chainId } = useActiveChainId()\r\n    return useContract<Weth>(chainId ? WNATIVE[chainId]?.address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n    return useContract<Erc20Bytes32>(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): IPair | null {\r\n    return useContract(pairAddress, IPairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract() {\r\n    const { chainId } = useActiveChainId()\r\n    return useContract<Multicall>(getMulticallAddress(chainId), multiCallAbi, false)\r\n}\r\n\r\n\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n    useSWRConfig,\r\n    // eslint-disable-next-line camelcase\r\n    unstable_serialize,\r\n} from 'swr'\r\nimport { useActiveChainId } from 'src/hooks/useActiveChainId'\r\nimport { AppState, useAppDispatch } from '../index'\r\nimport {\r\n    addMulticallListeners,\r\n    Call,\r\n    removeMulticallListeners,\r\n    parseCallKey,\r\n    toCallKey,\r\n    ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n    readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n    return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n    return (\r\n        x === undefined ||\r\n        (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n    )\r\n}\r\n\r\ninterface CallResult {\r\n    readonly valid: boolean\r\n    readonly data: string | undefined\r\n    readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n    blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n    const { chainId } = useActiveChainId()\r\n    const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n        (state) => state.multicall.callResults,\r\n    )\r\n    const dispatch = useAppDispatch()\r\n\r\n    const serializedCallKeys: string = useMemo(\r\n        () =>\r\n            JSON.stringify(\r\n                calls\r\n                    ?.filter((c): c is Call => Boolean(c))\r\n                    ?.map(toCallKey)\r\n                    ?.sort() ?? [],\r\n            ),\r\n        [calls],\r\n    )\r\n\r\n    // update listeners when there is an actual change that persists for at least 100ms\r\n    useEffect(() => {\r\n        const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n        if (!chainId || callKeys.length === 0) return undefined\r\n        // eslint-disable-next-line @typescript-eslint/no-shadow\r\n        const calls = callKeys.map((key) => parseCallKey(key))\r\n        dispatch(\r\n            addMulticallListeners({\r\n                chainId,\r\n                calls,\r\n                options,\r\n            }),\r\n        )\r\n\r\n        return () => {\r\n            dispatch(\r\n                removeMulticallListeners({\r\n                    chainId,\r\n                    calls,\r\n                    options,\r\n                }),\r\n            )\r\n        }\r\n    }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n    return useMemo(\r\n        () =>\r\n            calls.map<CallResult>((call) => {\r\n                if (!chainId || !call) return INVALID_RESULT\r\n                const result = callResults[chainId]?.[toCallKey(call)]\r\n                let data\r\n                if (result?.data && result?.data !== '0x') {\r\n                    // eslint-disable-next-line prefer-destructuring\r\n                    data = result.data\r\n                }\r\n\r\n                return { valid: true, data, blockNumber: result?.blockNumber }\r\n            }),\r\n        [callResults, calls, chainId],\r\n    )\r\n}\r\n\r\ninterface CallState {\r\n    readonly valid: boolean\r\n    // the result, or undefined if loading or errored/no data\r\n    readonly result: Result | undefined\r\n    // true if the result has never been fetched\r\n    readonly loading: boolean\r\n    // true if the result is not for the latest block\r\n    readonly syncing: boolean\r\n    // true if the call was made and is synced, but the return data is invalid\r\n    readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n    callResult: CallResult | undefined,\r\n    contractInterface: Interface | undefined,\r\n    fragment: FunctionFragment | undefined,\r\n    latestBlockNumber: number | undefined,\r\n): CallState {\r\n    if (!callResult) return INVALID_CALL_STATE\r\n    const { valid, data, blockNumber } = callResult\r\n    if (!valid) return INVALID_CALL_STATE\r\n    if (valid && !blockNumber) return LOADING_CALL_STATE\r\n    if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n    const success = data && data.length > 2\r\n    const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n    let result: Result | undefined\r\n    if (success && data) {\r\n        try {\r\n            result = contractInterface.decodeFunctionResult(fragment, data)\r\n        } catch (error) {\r\n            console.debug('Result data parsing failed', fragment, data)\r\n            return {\r\n                valid: true,\r\n                loading: false,\r\n                error: true,\r\n                syncing,\r\n                result,\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        valid: true,\r\n        loading: false,\r\n        syncing,\r\n        result,\r\n        error: !success,\r\n    }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n    contract: Contract | null | undefined,\r\n    methodName: string,\r\n    callInputs: OptionalMethodInputs[],\r\n    options?: ListenerOptions,\r\n): CallState[] {\r\n    const { chainId } = useActiveChainId()\r\n    const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n    const calls = useMemo(\r\n        () =>\r\n            contract && fragment && callInputs && callInputs.length > 0\r\n                ? callInputs.map<Call>((inputs) => {\r\n                    return {\r\n                        address: contract.address,\r\n                        callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n                    }\r\n                })\r\n                : [],\r\n        [callInputs, contract, fragment],\r\n    )\r\n\r\n    const results = useCallsData(calls, options)\r\n    const { cache } = useSWRConfig()\r\n\r\n    return useMemo(() => {\r\n        const currentBlockNumber = cache.get(unstable_serialize(['blockNumber', chainId]))\r\n        return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlockNumber))\r\n    }, [cache, chainId, results, contract?.interface, fragment])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n    addresses: (string | undefined)[],\r\n    contractInterface: Interface,\r\n    methodName: string,\r\n    callInputs?: OptionalMethodInputs,\r\n    options?: ListenerOptions,\r\n): CallState[] {\r\n    const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n    const callData: string | undefined = useMemo(\r\n        () =>\r\n            fragment && isValidMethodArgs(callInputs)\r\n                ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n                : undefined,\r\n        [callInputs, contractInterface, fragment],\r\n    )\r\n\r\n    const calls = useMemo(\r\n        () =>\r\n            fragment && addresses && addresses.length > 0 && callData\r\n                ? addresses.map<Call | undefined>((address) => {\r\n                    return address && callData\r\n                        ? {\r\n                            address,\r\n                            callData,\r\n                        }\r\n                        : undefined\r\n                })\r\n                : [],\r\n        [addresses, callData, fragment],\r\n    )\r\n\r\n    const results = useCallsData(calls, options)\r\n    const { chainId } = useActiveChainId()\r\n\r\n    const { cache } = useSWRConfig()\r\n\r\n    return useMemo(() => {\r\n        const currentBlockNumber = cache.get(unstable_serialize(['blockNumber', chainId]))\r\n        return results.map((result) => toCallState(result, contractInterface, fragment, currentBlockNumber))\r\n    }, [cache, chainId, results, contractInterface, fragment])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n    contract: Contract | null | undefined,\r\n    methodName: string,\r\n    inputs?: OptionalMethodInputs,\r\n    options?: ListenerOptions,\r\n): CallState {\r\n    const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n    const calls = useMemo<Call[]>(() => {\r\n        return contract && fragment && isValidMethodArgs(inputs)\r\n            ? [\r\n                {\r\n                    address: contract.address,\r\n                    callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n                },\r\n            ]\r\n            : []\r\n    }, [contract, fragment, inputs])\r\n\r\n    const result = useCallsData(calls, options)[0]\r\n    const { cache } = useSWRConfig()\r\n    const { chainId } = useActiveChainId()\r\n\r\n    return useMemo(() => {\r\n        const currentBlockNumber = cache.get(unstable_serialize(['blockNumber', chainId]))\r\n        return toCallState(result, contract?.interface, fragment, currentBlockNumber)\r\n    }, [cache, chainId, result, contract?.interface, fragment])\r\n}\r\n","\r\nimport JSBI from 'jsbi'\r\nimport { Currency, Native, Token, CurrencyAmount } from 'src/utils/token'\r\nimport { useMemo } from 'react'\r\nimport { useAccount } from 'wagmi'\r\nimport ERC20_INTERFACE from 'src/config/abi/erc20'\r\n\r\nimport { useAllTokens } from 'src/hooks/Tokens'\r\nimport { useMulticallContract } from 'src/hooks/useContract'\r\nimport { isAddress } from 'src/utils'\r\nimport orderBy from 'lodash/orderBy'\r\nimport useNativeCurrency from 'src/hooks/useNativeCurrency'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useNativeBalances(uncheckedAddresses?: (string | undefined)[]): {\r\n    [address: string]: CurrencyAmount<Native> | undefined\r\n} {\r\n    const native = useNativeCurrency()\r\n    const multicallContract = useMulticallContract()\r\n\r\n    const addresses: string[] = useMemo(\r\n        () =>\r\n            uncheckedAddresses ? orderBy(uncheckedAddresses.map(isAddress).filter((a): a is string => a !== false)) : [],\r\n        [uncheckedAddresses],\r\n    )\r\n\r\n\r\n    const results = useSingleContractMultipleData(\r\n        multicallContract,\r\n        'getEthBalance',\r\n        useMemo(() => addresses.map((address) => [address]), [addresses]),\r\n    )\r\n\r\n    return useMemo(\r\n        () =>\r\n            addresses.reduce<{ [address: string]: CurrencyAmount<Native> }>((memo, address, i) => {\r\n                const value = results?.[i]?.result?.[0]\r\n                if (value) memo[address] = CurrencyAmount.fromRawAmount(native, JSBI.BigInt(value.toString()))\r\n                return memo\r\n            }, {}),\r\n        [addresses, results, native],\r\n    )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n    address?: string,\r\n    tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }, boolean] {\r\n    const validatedTokens: Token[] = useMemo(\r\n        () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n        [tokens],\r\n    )\r\n\r\n    const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n    const balances = useMultipleContractSingleData(\r\n        validatedTokenAddresses,\r\n        ERC20_INTERFACE,\r\n        'balanceOf',\r\n        useMemo(() => [address], [address]),\r\n    )\r\n\r\n    const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n    return [\r\n        useMemo(\r\n            () =>\r\n                address && validatedTokens.length > 0\r\n                    ? validatedTokens.reduce<{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }>((memo, token, i) => {\r\n                        const value = balances?.[i]?.result?.[0]\r\n                        const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n                        if (amount) {\r\n                            memo[token.address] = CurrencyAmount.fromRawAmount(token, amount)\r\n                        }\r\n                        return memo\r\n                    }, {})\r\n                    : {},\r\n            [address, validatedTokens, balances],\r\n        ),\r\n        anyLoading,\r\n    ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n    address?: string,\r\n    tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: CurrencyAmount<Token> | undefined } {\r\n    return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): CurrencyAmount<Token> | undefined {\r\n    const tokenBalances = useTokenBalances(\r\n        account,\r\n        useMemo(() => [token], [token]),\r\n    )\r\n    if (!token) return undefined\r\n    return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n    account?: string,\r\n    currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount<Currency> | undefined)[] {\r\n    const tokens = useMemo(\r\n        () => currencies?.filter((currency): currency is Token => currency?.isToken) ?? [],\r\n        [currencies],\r\n    )\r\n\r\n    const tokenBalances = useTokenBalances(account, tokens)\r\n\r\n    const containsNative: boolean = useMemo(\r\n        () => currencies?.some((currency) => currency?.isNative) ?? false,\r\n        [currencies],\r\n    )\r\n    const uncheckedAddresses = useMemo(() => (containsNative ? [account] : []), [containsNative, account])\r\n    const nativeBalance = useNativeBalances(uncheckedAddresses)\r\n\r\n    return useMemo(\r\n        () =>\r\n            currencies?.map((currency) => {\r\n                if (!account || !currency) return undefined\r\n                if (currency?.isToken) return tokenBalances[currency.address]\r\n                if (currency?.isNative) return nativeBalance[account]\r\n                return undefined\r\n            }) ?? [],\r\n        [account, currencies, nativeBalance, tokenBalances],\r\n    )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount<Currency> | undefined {\r\n    return useCurrencyBalances(\r\n        account,\r\n        useMemo(() => [currency], [currency]),\r\n    )[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: CurrencyAmount<Token> | undefined } {\r\n    const { address: account } = useAccount()\r\n    const allTokens = useAllTokens()\r\n    const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n    const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n    return balances ?? {}\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport { useTranslation } from 'src/context/Localization'\r\nimport TokenSelectModal from 'src/components/TokenSelectModal'\r\nimport { useAccount } from 'wagmi'\r\nimport { useCurrencyBalance } from 'src/state/wallet/hooks'\r\n\r\nfunction CurrencyInputPanel({ currency, onCurrencySelect, onUserInput }) {\r\n\r\n    const { t } = useTranslation()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const { address: account } = useAccount()\r\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n\r\n    return (\r\n        <div>\r\n            <Box>\r\n                <Box sx={{\r\n                    mb: 1,\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-end',\r\n                    '& .MuiTypography-root': {\r\n                        color: '#aeafc2'\r\n                    }\r\n                }}>\r\n                    <Typography>{t('Swap')}</Typography>\r\n                    <Typography fontSize={12}>Balance: {selectedCurrencyBalance?.toSignificant(6) ?? 0}</Typography>\r\n                </Box>\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <TextField\r\n                        variant=\"standard\"\r\n                        autoComplete='off'\r\n                        onChange={(e) => onUserInput(e.target.value)}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                            placeholder: '0.0',\r\n                            type: 'number',\r\n                            inputProps: { min: 0, inputMode: 'numeric', pattern: '[0-9]*' },\r\n\r\n                        }}\r\n                        sx={{ input: { fontSize: '28px', fontWeight: 'bold', color: '#555' } }}\r\n                    />\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        '& .MuiButton-root': {\r\n                            ml: 1,\r\n                            color: '#333',\r\n                            borderRadius: '16px',\r\n                            bgcolor: 'rgb(255, 231, 172)'\r\n                        }\r\n                    }}>\r\n                        <Button >{t('Max')}</Button>\r\n                        <Button\r\n                            onClick={() => setOpen(true)}\r\n                            endIcon={<KeyboardArrowDownIcon />}\r\n                            sx={{ whiteSpace: 'nowrap', minWidth: '140px' }}\r\n                        >\r\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                <img src={currency?.logoURI} style={{ width: '24px', height: '24px' }} />\r\n                                <Typography px={1}>{currency?.symbol}</Typography>\r\n                            </Box>\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <TokenSelectModal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                onCurrencySelect={onCurrencySelect}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyInputPanel","import React, { useState } from 'react'\r\nimport { Button, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport { useTranslation } from 'src/context/Localization'\r\nimport TokenSelectModal from 'src/components/TokenSelectModal'\r\n\r\n\r\nfunction CurrencyOutputPanel({ currency, onCurrencySelect, onUserInput }) {\r\n\r\n\r\n    const { t } = useTranslation()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <Box>\r\n                <Box sx={{\r\n                    mb: 1,\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'flex-end',\r\n                    '& .MuiTypography-root': {\r\n                        color: '#aeafc2'\r\n                    }\r\n                }}>\r\n                    <Typography>{t('To')}</Typography>\r\n                    <Typography fontSize={12}>Balance: 0</Typography>\r\n                </Box>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                }}>\r\n                    <TextField\r\n                        variant=\"standard\"\r\n                        autoComplete='off'\r\n                        onChange={(e) => onUserInput(e.target.value)}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                            placeholder: '0.0',\r\n                            type: 'number',\r\n                            inputProps: { min: 0, inputMode: 'numeric', pattern: '[0-9]*' },\r\n\r\n                        }}\r\n                        sx={{ input: { fontSize: '28px', fontWeight: 'bold', color: '#555' } }}\r\n                    />\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        '& .MuiButton-root': {\r\n                            ml: 1,\r\n                            color: '#333',\r\n                            borderRadius: '16px',\r\n                            bgcolor: 'rgb(255, 231, 172)'\r\n                        }\r\n                    }}>\r\n                        <Button\r\n                            onClick={() => setOpen(true)}\r\n                            endIcon={<KeyboardArrowDownIcon />}\r\n                            sx={{ whiteSpace: 'nowrap', minWidth: '140px' }}\r\n                        >\r\n                            {/* {t('Select token')} */}\r\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                <img src={currency?.logoURI} style={{ width: '24px', height: '24px' }} />\r\n                                <Typography px={1}>{currency?.symbol}</Typography>\r\n                            </Box>\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <TokenSelectModal\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                onCurrencySelect={onCurrencySelect}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyOutputPanel","import { Button } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { useTranslation } from 'src/context/Localization'\r\n\r\nfunction SubmitSwap() {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: 'flex', mt: 3 }}>\r\n                <Button sx={{\r\n                    p: 1,\r\n                    width: '100%',\r\n                    borderRadius: '20px',\r\n                    fontSize: '1.2rem',\r\n                    color: '#fff',\r\n                    bgcolor: '#ffae5a',\r\n                    '&:hover': {\r\n                        bgcolor: '#ffae5a'\r\n                    }\r\n                }}>\r\n                    {t('Swap')}\r\n                </Button>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitSwap","import { Divider } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { IconArrowsUpDown } from \"@tabler/icons\"\r\nimport { useSwapActionHandlers } from \"src/state/swap/useSwapActionHandlers\"\r\n\r\nfunction SwitchIOCurrency() {\r\n\r\n    const { onSwitchTokens } = useSwapActionHandlers()\r\n\r\n    return (\r\n        <div>\r\n            <Divider sx={{ mt: 4, mb: 2 }}>\r\n                <Box sx={{\r\n                    p: 1,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    bgcolor: 'rgb(255, 231, 172)',\r\n                    borderRadius: '9999px',\r\n                    cursor: 'pointer'\r\n                }}\r\n                    onClick={onSwitchTokens}\r\n                >\r\n                    <IconArrowsUpDown color='#333' size={18} />\r\n                </Box>\r\n            </Divider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwitchIOCurrency","const replaceBrowserHistory = (key: string, value?: string | number | null) => {\r\n    const url = new URL(window.location.href)\r\n    if (!value) {\r\n        url.searchParams.delete(key)\r\n    } else {\r\n        url.searchParams.set(key, String(value))\r\n    }\r\n    window.history.replaceState({}, '', url)\r\n}\r\n\r\nexport default replaceBrowserHistory","import { Currency } from './token'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n    if (currency?.isNative) return currency.symbol?.toUpperCase()\r\n    if (currency?.isToken) return currency.address\r\n    throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { useCallback, useMemo } from 'react'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { useSwapState } from 'src/state/swap/hooks'\r\nimport { Field } from 'src/state/swap/actions'\r\nimport { useCurrency } from 'src/hooks/Tokens'\r\nimport { Currency } from 'src/utils/token'\r\nimport { useSwapActionHandlers } from 'src/state/swap/useSwapActionHandlers'\r\nimport CurrencyInputPanel from './CurrencyInputPanel'\r\nimport CurrencyOutputPanel from './CurrencyOutputPanel'\r\nimport SubmitSwap from './SubmitSwap'\r\nimport SwitchIOCurrency from './SwitchIOCurrency'\r\nimport replaceBrowserHistory from 'src/utils/replaceBrowserHistory'\r\nimport currencyId from 'src/utils/currencyId'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardView: {\r\n        maxWidth: '500px',\r\n        padding: '32px',\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        margin: '20px',\r\n        borderRadius: '32px',\r\n        background: '#fff',\r\n        '& .MuiTypography-root': {\r\n            color: '#333'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            minWidth: '95%',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        }\r\n    }\r\n}))\r\n\r\nfunction SwapContainer() {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        [Field.INPUT]: { currencyId: inputCurrencyId },\r\n        [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    } = useSwapState()\r\n\r\n    const inputCurrency = useCurrency(inputCurrencyId)\r\n    const outputCurrency = useCurrency(outputCurrencyId)\r\n\r\n    const currencies: { [field in Field]?: Currency } = useMemo(\r\n        () => ({\r\n            [Field.INPUT]: inputCurrency ?? undefined,\r\n            [Field.OUTPUT]: outputCurrency ?? undefined,\r\n        }),\r\n        [inputCurrency, outputCurrency],\r\n    )\r\n\r\n\r\n    const { onCurrencySelection, onUserInput } = useSwapActionHandlers()\r\n    const handleTypeInput = useCallback(\r\n        (value: string) => {\r\n            onUserInput(Field.INPUT, value)\r\n        },\r\n        [onUserInput],\r\n    )\r\n    const handleTypeOutput = useCallback(\r\n        (value: string) => {\r\n            onUserInput(Field.OUTPUT, value)\r\n        },\r\n        [onUserInput],\r\n    )\r\n\r\n\r\n    const handleInputSelect = useCallback(\r\n        (newCurrencyInput) => {\r\n            //   setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n            onCurrencySelection(Field.INPUT, newCurrencyInput)\r\n\r\n            const newCurrencyInputId = currencyId(newCurrencyInput)\r\n            if (newCurrencyInputId === outputCurrencyId) {\r\n                replaceBrowserHistory('outputCurrency', inputCurrencyId)\r\n            }\r\n            replaceBrowserHistory('inputCurrency', newCurrencyInputId)\r\n        },\r\n        [inputCurrencyId, outputCurrencyId, onCurrencySelection],\r\n    )\r\n\r\n\r\n    const handleOutputSelect = useCallback(\r\n        (newCurrencyOutput) => {\r\n            onCurrencySelection(Field.OUTPUT, newCurrencyOutput)\r\n\r\n            const newCurrencyOutputId = currencyId(newCurrencyOutput)\r\n            if (newCurrencyOutputId === inputCurrencyId) {\r\n                replaceBrowserHistory('inputCurrency', outputCurrencyId)\r\n            }\r\n            replaceBrowserHistory('outputCurrency', newCurrencyOutputId)\r\n        },\r\n\r\n        [inputCurrencyId, outputCurrencyId, onCurrencySelection],\r\n    )\r\n\r\n    return (\r\n        <div className={classes.cardView}>\r\n            <CurrencyInputPanel\r\n                currency={currencies[Field.INPUT]}\r\n                onCurrencySelect={handleInputSelect}\r\n                onUserInput={handleTypeInput}\r\n            />\r\n            <SwitchIOCurrency />\r\n            <CurrencyOutputPanel\r\n                currency={currencies[Field.OUTPUT]}\r\n                onCurrencySelect={handleOutputSelect}\r\n                onUserInput={handleTypeOutput}\r\n            />\r\n            <SubmitSwap />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SwapContainer","import { useDispatch, useSelector } from 'react-redux'\r\nimport { AppState } from '../index'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n    return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n","\r\nexport const registerToken = async (\r\n    tokenAddress: string,\r\n    tokenSymbol: string,\r\n    tokenDecimals: number,\r\n    tokenLogo: string,\r\n) => {\r\n\r\n    const tokenAdded = await window.ethereum.request({\r\n        method: 'wallet_watchAsset',\r\n        params: {\r\n            type: 'ERC20',\r\n            options: {\r\n                address: tokenAddress,\r\n                symbol: tokenSymbol,\r\n                decimals: tokenDecimals,\r\n                image: tokenLogo,\r\n            },\r\n        },\r\n    })\r\n\r\n    return tokenAdded\r\n}\r\n","import { Box, Button, Typography } from \"@mui/material\"\r\nimport { useAllTokens } from \"src/hooks/Tokens\"\r\nimport { registerToken } from \"src/utils/registerToken\"\r\nimport { Token } from \"src/utils/token\"\r\n\r\n\r\nfunction AddTokenToWallet() {\r\n\r\n    const onRegisterToken = (token: Token) => {\r\n        registerToken(\r\n            token.address,\r\n            token.symbol,\r\n            token.decimals,\r\n            token.logoURI)\r\n    }\r\n    const tokens = useAllTokens()\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n                onClick={() =>\r\n                    onRegisterToken(\r\n                        tokens['0x8160510aAa29256E34d26D770171C05867d5252F']\r\n                    )\r\n                }\r\n            >\r\n                <Typography sx={{\r\n                    width: '100%',\r\n                    textAlign: 'center',\r\n                    color: '#ffae5a'\r\n                }}>\r\n                    Add SVC to wallet\r\n                </Typography>\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AddTokenToWallet","\r\nimport { makeStyles } from '@mui/styles'\r\nimport Settings from 'src/components/Settings'\r\nimport { Box } from '@mui/system'\r\nimport SwapContainer from './components/SwapContainer'\r\nimport AddTokenToWallet from './components/AddTokenToWallet'\r\nimport { useActiveChainId } from 'src/hooks/useActiveChainId'\r\nimport { useAccount } from 'wagmi'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    swapView: {\r\n        width: '100vw',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}))\r\n\r\nfunction Swap() {\r\n\r\n    const classes = useStyles()\r\n    const { chainId } = useActiveChainId()\r\n    const { isConnected } = useAccount()\r\n\r\n    return (\r\n        <div className={classes.swapView}>\r\n            <Box sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'flex-end',\r\n                height: 'fit-content'\r\n            }}>\r\n                <Settings />\r\n                <SwapContainer />\r\n                {\r\n                    isConnected && chainId === 80001 &&\r\n                    <AddTokenToWallet />\r\n                }\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Swap\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst INSTANT_INTERVAL = 1000\r\nconst FAST_INTERVAL = 10000;\r\nconst SLOW_INTERVAL = 60000;\r\n\r\nexport const RefreshContext = React.createContext({ slow: 0, fast: 0, instant: 0 });\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nexport const RefreshContextProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\r\n    const [slow, setSlow] = useState(0);\r\n    const [fast, setFast] = useState(0);\r\n    const [instant, setInstant] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            setFast((prev) => prev + 1);\r\n        }, FAST_INTERVAL);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            setSlow((prev) => prev + 1);\r\n        }, SLOW_INTERVAL);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            setInstant((prev) => prev + 1)\r\n        }, INSTANT_INTERVAL)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    return <RefreshContext.Provider value={{ slow, fast, instant }}>{children}</RefreshContext.Provider>;\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport { FetchStatus } from 'src/config/constants/types'\r\nimport { useCallback, useEffect, useMemo, useRef } from 'react'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { FormatTypes } from '@ethersproject/abi'\r\nimport useSWR, {\r\n    Middleware,\r\n    SWRConfiguration,\r\n    KeyedMutator,\r\n    // eslint-disable-next-line camelcase\r\n    unstable_serialize,\r\n} from 'swr'\r\nimport { multicallv2, MulticallOptions, Call } from 'src/utils/multiCall'\r\nimport { MaybeContract, ContractMethodName, ContractMethodParams } from 'src/utils/types'\r\n\r\ndeclare module 'swr' {\r\n    interface SWRResponse<Data = any, Error = any> {\r\n        data?: Data\r\n        error?: Error\r\n        mutate: KeyedMutator<Data>\r\n        isValidating: boolean\r\n        // Add global fetchStatus to SWRResponse\r\n        status: FetchStatus\r\n    }\r\n}\r\n\r\nexport const fetchStatusMiddleware: Middleware = (useSWRNext) => {\r\n    return (key, fetcher, config) => {\r\n        const swr = useSWRNext(key, fetcher, config)\r\n        return Object.defineProperty(swr, 'status', {\r\n            get() {\r\n                let status = FetchStatus.Idle\r\n\r\n                if (!swr.isValidating && !swr.error && !swr.data) {\r\n                    status = FetchStatus.Idle\r\n                } else if (swr.isValidating && !swr.error && !swr.data) {\r\n                    status = FetchStatus.Fetching\r\n                } else if (swr.data) {\r\n                    status = FetchStatus.Fetched\r\n                } else if (swr.error && !swr.data) {\r\n                    status = FetchStatus.Failed\r\n                }\r\n                return status\r\n            },\r\n        })\r\n    }\r\n}\r\n\r\ntype UseSWRContractArrayKey<C extends Contract = Contract, N extends ContractMethodName<C> = any> =\r\n    | [MaybeContract<C>, N, ContractMethodParams<C, N>]\r\n    | [MaybeContract<C>, N]\r\n\r\nexport type UseSWRContractObjectKey<\r\n    C extends Contract = Contract,\r\n    N extends ContractMethodName<C> = ContractMethodName<C>,\r\n> = {\r\n    contract: MaybeContract<C>\r\n    methodName: N\r\n    params?: ContractMethodParams<C, N>\r\n}\r\n\r\ntype UseSWRContractSerializeKeys = {\r\n    address: string\r\n    interfaceFormat: string[]\r\n    methodName: string\r\n    callData: string\r\n}\r\n\r\nconst getContractKey = <T extends Contract = Contract, N extends ContractMethodName<T> = any>(\r\n    key?: UseSWRContractKey<T, N> | null,\r\n) => {\r\n    if (Array.isArray(key)) {\r\n        const [contract, methodName, params] = key || []\r\n        return {\r\n            contract,\r\n            methodName,\r\n            params,\r\n        }\r\n    }\r\n    return key\r\n}\r\n\r\nconst serializesContractKey = <T extends Contract = Contract>(\r\n    key?: UseSWRContractKey<T> | null,\r\n): UseSWRContractSerializeKeys | null => {\r\n    const { contract, methodName, params } = getContractKey(key) || {}\r\n    const serializedKeys =\r\n        key && contract && methodName\r\n            ? {\r\n                address: contract.address,\r\n                interfaceFormat: contract.interface.format(FormatTypes.full) as string[],\r\n                methodName,\r\n                callData: contract.interface.encodeFunctionData(methodName, params),\r\n            }\r\n            : null\r\n    return serializedKeys\r\n}\r\n\r\nexport type UseSWRContractKey<T extends Contract = Contract, N extends ContractMethodName<T> = any> =\r\n    | UseSWRContractArrayKey<T, N>\r\n    | UseSWRContractObjectKey<T, N>\r\n\r\n/**\r\n * @example\r\n * const key = [contract, 'methodName', [params]]\r\n * const key = { contract, methodName, params }\r\n * const { data, error, mutate } = useSWRContract(key)\r\n */\r\nexport function useSWRContract<\r\n    Error = any,\r\n    T extends Contract = Contract,\r\n    N extends ContractMethodName<T> = ContractMethodName<T>,\r\n    Data = Awaited<ReturnType<T['callStatic'][N]>>,\r\n>(key?: UseSWRContractKey<T, N> | null, config: SWRConfiguration<Data, Error> = {}) {\r\n    const { contract, methodName, params } = getContractKey(key) || {}\r\n    const serializedKeys = useMemo(() => serializesContractKey(key), [key])\r\n\r\n    return useSWR<Data, Error>(\r\n        serializedKeys,\r\n        async () => {\r\n            if (!contract || !methodName) return null\r\n            if (!params) return contract[methodName]()\r\n            return contract[methodName](...params)\r\n        },\r\n        config,\r\n    )\r\n}\r\n\r\nexport const immutableMiddleware: Middleware = (useSWRNext) => (key, fetcher, config) => {\r\n    config.revalidateOnFocus = false\r\n    config.revalidateIfStale = false\r\n    config.revalidateOnReconnect = false\r\n    return useSWRNext(key, fetcher, config)\r\n}\r\n\r\nexport function useSWRMulticall<Data>(abi: any[], calls: Call[], options?: MulticallOptions & SWRConfiguration) {\r\n    const { requireSuccess = true, ...config } = options || {}\r\n    return useSWR<Data>(calls, () => multicallv2({ abi, calls, options: { requireSuccess } }), {\r\n        revalidateIfStale: false,\r\n        revalidateOnFocus: false,\r\n        ...config,\r\n    })\r\n}\r\n\r\nexport const localStorageMiddleware: Middleware = (useSWRNext) => (key, fetcher, config) => {\r\n    const swr = useSWRNext(key, fetcher, config)\r\n    const { data } = swr\r\n    const serializedKey = useMemo(() => unstable_serialize(key), [key])\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            try {\r\n                const stringify = JSON.stringify(data)\r\n                localStorage?.setItem(serializedKey, stringify)\r\n            } catch (error) {\r\n                //\r\n            }\r\n        }\r\n    }, [data, serializedKey])\r\n\r\n    let localStorageDataParsed\r\n\r\n    if (!data && typeof window !== 'undefined') {\r\n        const localStorageData = localStorage?.getItem(serializedKey)\r\n\r\n        if (localStorageData) {\r\n            try {\r\n                localStorageDataParsed = JSON.parse(localStorageData)\r\n            } catch (error) {\r\n                localStorage?.removeItem(serializedKey)\r\n            }\r\n        }\r\n    }\r\n\r\n    return Object.defineProperty(swr, 'data', {\r\n        value: data || localStorageDataParsed,\r\n    })\r\n}\r\n\r\n// This is a SWR middleware for keeping the data even if key changes.\r\nexport const laggyMiddleware: Middleware = (useSWRNext) => {\r\n    return (key, fetcher, config) => {\r\n        // Use a ref to store previous returned data.\r\n        const laggyDataRef = useRef<any>()\r\n\r\n        // Actual SWR hook.\r\n        const swr = useSWRNext(key, fetcher, config)\r\n\r\n        useEffect(() => {\r\n            // Update ref if data is not undefined.\r\n            if (swr.data !== undefined) {\r\n                laggyDataRef.current = swr.data\r\n            }\r\n        }, [swr.data])\r\n\r\n        // Expose a method to clear the laggy data, if any.\r\n        const resetLaggy = useCallback(() => {\r\n            laggyDataRef.current = undefined\r\n        }, [])\r\n\r\n        // Fallback to previous data if the current data is undefined.\r\n        const dataOrLaggyData = swr.data === undefined ? laggyDataRef.current : swr.data\r\n\r\n        // Is it showing previous data?\r\n        const isLagging = swr.data === undefined && laggyDataRef.current !== undefined\r\n\r\n        // Also add a `isLagging` field to SWR.\r\n        Object.defineProperty(swr, 'isLagging', {\r\n            value: isLagging,\r\n        })\r\n        Object.defineProperty(swr, 'resetLaggy', {\r\n            value: resetLaggy,\r\n        })\r\n        Object.defineProperty(swr, 'data', {\r\n            value: dataOrLaggyData,\r\n        })\r\n        return swr\r\n    }\r\n}\r\n\r\n// dev only\r\nexport const loggerMiddleware: Middleware = (useSWRNext) => {\r\n    return (key, fetcher, config) => {\r\n        // Add logger to the original fetcher.\r\n        const extendedFetcher = fetcher\r\n            ? (...args: unknown[]) => {\r\n                console.debug('SWR Request:', key)\r\n                return fetcher(...args)\r\n            }\r\n            : null\r\n\r\n        // Execute the hook with the new fetcher.\r\n        return useSWRNext(key, extendedFetcher, config)\r\n    }\r\n}\r\n","\r\nimport { Route, BrowserRouter, Routes } from 'react-router-dom'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\r\nimport ViewBase from './components/viewbase'\r\nimport Swap from './views/swap'\r\nimport { WagmiProvider, client } from './utils/wagmi'\r\nimport { Provider } from 'react-redux'\r\nimport store from './state'\r\nimport { RefreshContextProvider } from './context'\r\nimport { ToastContainer } from \"react-toastify\"\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport { SWRConfig } from 'swr'\r\nimport { LanguageProvider } from './context/Localization'\r\nimport { fetchStatusMiddleware } from './hooks/useSWRContract'\r\n\r\n\r\n\r\nexport default function App() {\r\n    const theme = createTheme({\r\n        typography: {\r\n            fontFamily: 'Square'\r\n        },\r\n        components: {\r\n            MuiButton: {\r\n                styleOverrides: {\r\n                    root: {\r\n                        textTransform: 'none'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <SWRConfig\r\n                value={{\r\n                    use: [fetchStatusMiddleware]\r\n                }}\r\n            >\r\n                <WagmiProvider client={client}>\r\n                    <Provider store={store}>\r\n                        <ToastContainer autoClose={3000} limit={3} pauseOnFocusLoss={false} />\r\n                        <LanguageProvider>\r\n                            <RefreshContextProvider>\r\n                                <ThemeProvider theme={theme}>\r\n                                    <ViewBase>\r\n                                        <Routes>\r\n                                            <Route path={'/swap'} element={<Swap />} />\r\n                                        </Routes>\r\n                                    </ViewBase>\r\n                                </ThemeProvider>\r\n                            </RefreshContextProvider>\r\n                        </LanguageProvider>\r\n                    </Provider>\r\n                </WagmiProvider>\r\n            </SWRConfig>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from \"react-dom/client\";\nimport { Theme } from '@mui/material/styles'\n\nimport App from './App'\n\nimport './index.css'\n\ndeclare global {\n    interface Window {\n        aptos: any\n    }\n}\n\ndeclare module '@mui/styles/defaultTheme' {\n    interface DefaultTheme extends Theme { }\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\n"],"sourceRoot":""}